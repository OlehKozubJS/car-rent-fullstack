{"version":3,"file":"static/js/546.9b168fd7.chunk.js","mappings":"+KAAA,MAAMA,EAAwBA,KAC5B,MAAMC,EAAqBC,GACrBA,GAAU,EACLA,EAEA,EAAIA,EAAS,EAAID,EAAkBC,EAAS,GAIjDC,EAAsBD,GACtBA,GAAU,EACLA,EAGL,EAAID,EAAkBC,EAAS,GAC/B,EAAIA,EACJ,EACAC,EAAmBD,EAAS,GAKlC,OACEE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcF,EAAmB,OACpCC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcJ,EAAkB,OACnCG,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,iBAAeF,EAAmB,SACjC,C","sources":["pages/test/RecursionFunctionTest.jsx"],"sourcesContent":["const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return (\n        3 * recursionFunction(number - 1) +\n        3 * number -\n        2 +\n        recursionFunction2(number - 1)\n      );\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction(0)}</p>\n      <p>Square of 1: {recursionFunction(1)}</p>\n      <p>Square of 2: {recursionFunction(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction(4)}</p>\n      <p>Square of 5: {recursionFunction(5)}</p>\n      <p>Square of 6: {recursionFunction(6)}</p>\n      <p>Square of 7: {recursionFunction(7)}</p>\n      <p>Square of 8: {recursionFunction(8)}</p>\n      <p>Square of 9: {recursionFunction(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1\n\n*/\n"],"names":["RecursionFunctionTest","recursionFunction","number","recursionFunction2","_jsxs","children"],"sourceRoot":""}