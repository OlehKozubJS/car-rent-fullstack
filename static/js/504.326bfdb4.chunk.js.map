{"version":3,"file":"static/js/504.326bfdb4.chunk.js","mappings":"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","sources":["pages/test/ComponentChooser.jsx","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/LogicGates.jsx","pages/test/RecursionFunctionTest.jsx","pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js","pages/test/TestPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nconst ComponentChooser = ({\n  componentNames,\n  currentComponentName,\n  onChange,\n}) => {\n  const chooseComponent = ({ target }) => {\n    onChange(target.value);\n  };\n\n  return (\n    <nav>\n      {componentNames.map((value) => {\n        return (\n          <label key={value} htmlFor={value}>\n            <input\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              onChange={chooseComponent}\n              checked={currentComponentName === value}\n            />\n            <span>{value}</span>\n          </label>\n        );\n      })}\n    </nav>\n  );\n};\n\nexport { ComponentChooser };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial, DraggableComponentStyle };\n","import { useEffect, useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { SimplestCustomRange } from \"./SimplestCustomRange\";\nimport { ComponentChooser } from \"./ComponentChooser\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./RecursionFunctionTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n  const [rangeValue, setRangeValue] = useState(0);\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentChooser\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n        ]}\n        currentComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && (\n        <SimplestCustomRange onChange={handleRangeValue} value={rangeValue} />\n      )}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      <p>{rangeValue}</p>\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n      <div>\n        <form onSubmit={handlePagePath}>\n          <input\n            name=\"pageNameInput\"\n            type=\"text\"\n            placeholder=\"Enter page name\"\n          />\n          <button type=\"submit\">Enter</button>\n        </form>\n        <Navigate to={`/${pagePath}`} />\n      </div>\n      <RecursionFunctionTest />\n    </section>\n  );\n};\n\nexport { TestPage };\n"],"names":["ComponentChooser","_ref","componentNames","currentComponentName","onChange","chooseComponent","_ref2","target","value","_jsx","children","map","_jsxs","htmlFor","id","name","type","checked","DraggableComponent","valueY","valueX","isDraggable","setIsDraggable","useState","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","handleMouseDown","clientY","clientX","useEffect","handleEventListener","_ref3","handleMouseUp","DraggableComponentStyle","onMouseDown","top","left","DraggableComponentField","setValueY","setValueX","styled","div","_templateObject","_taggedTemplateLiteral","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","RecursionFunctionTest","recursionFunction2","number","SimplestCustomRange","newRangeValue","RangeField","RangeDial","_templateObject2","_templateObject3","TestPage","componentName","setComponentName","rangeValue","setRangeValue","pagePath","setPagePath","newComponentName","onSubmit","event","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","concat"],"sourceRoot":""}