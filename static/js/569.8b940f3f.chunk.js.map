{"version":3,"file":"static/js/569.8b940f3f.chunk.js","mappings":"+MAMA,MAAMA,EAAgBA,KACpB,MAAOC,EAAqBC,IAA0BC,EAAAA,EAAAA,WAAS,IACxDC,EAAuBC,IAA4BF,EAAAA,EAAAA,UAAS,CAAC,IAC7DG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAU,IAE5CK,EAAoBA,KACpBP,IACEK,GAAgBF,EAAsBK,YAAc,IACtDF,GAAiB,IACjBL,GAAuB,IAEvBK,EAAgBD,EAAe,GAEnC,EAkBF,OAVAI,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAYC,YAAYJ,EAAmB,GAIjD,OAHKP,GACHY,cAAcF,GAET,KACLE,cAAcF,EAAU,CACzB,GACA,CAACV,EAAqBK,KAGvBQ,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAACC,oCAAmC,CAAAF,SAAA,CAAC,kBAEnCD,EAAAA,EAAAA,KAACI,gCAA+B,CAC9BC,YApBiBC,IACvBf,EAAyBe,EAAMC,OAAOC,YACtCpB,GAAuB,EAAK,EAmBtBqB,iBAAiBC,EAAAA,EAAAA,mBAAkBlB,SAGnC,C,6EC5CV,MAAMmB,E,QAAyBC,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iKAUnBC,IAA0B,IAAzB,gBAAEP,GAAiBO,EACtC,OAAOP,CAAe,G,yDCb1B,MAAMC,EAAqBlB,GACnB,6FAANyB,OAIIzB,EAAY,uCAAAyB,OAEZzB,EAAe,GAAE,uCAAAyB,OAEjBzB,EAAe,GAAE,uCAAAyB,OAEjBzB,EAAe,GAAE,W","sources":["pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradienHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (isGradientAnimation) {\n      if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n        setGradientLeft(-40);\n        setIsGradientAnimation(false);\n      } else {\n        setGradientLeft(gradientLeft + 5);\n      }\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <div>\n      <GradientHoverTestComponentStyleBase>\n        Gradient hover\n        <GradientHoverComponentStyleBase\n          onMouseOver={handleMouseOver}\n          backgroundimage={setLinearGradient(gradientLeft)}\n        ></GradientHoverComponentStyleBase>\n      </GradientHoverTestComponentStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHover };\n","import styled from \"styled-components\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n"],"names":["GradientHover","isGradientAnimation","setIsGradientAnimation","useState","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","useEffect","animation","setInterval","clearInterval","_jsx","children","_jsxs","GradientHoverTestComponentStyleBase","GradientHoverComponentStyleBase","onMouseOver","event","target","parentNode","backgroundimage","setLinearGradient","GradientHoverStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","_ref","concat"],"sourceRoot":""}