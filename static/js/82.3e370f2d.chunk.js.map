{"version":3,"file":"static/js/82.3e370f2d.chunk.js","mappings":"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","sources":["pages/test/AnimationTest/AnimationTest.jsx","pages/test/AnimationTest/AnimationTestController.jsx","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nimport { AnimationTestController } from \"./AnimationTestController\";\n\nconst AnimationTest = () => {\n  const [transformRotateValue, setTransformRotateValue] = useState(0);\n  const [transformRotateYvalue, setTransformRotateYvalue] = useState(0);\n  const [transformRotateXvalue, setTransformRotateXvalue] = useState(0);\n  const [perspectiveValue, setPerspectiveValue] = useState(0);\n\n  const handleTransformRotateValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateValue(valueX);\n    }\n  };\n\n  const handleTransformRotateYvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateYvalue(valueX);\n    }\n  };\n\n  const handleTransformRotateXvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateXvalue(valueX);\n    }\n  };\n\n  const handlePerspectiveValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setPerspectiveValue(valueX);\n    }\n  };\n  //handleTransformRotateValue transformRotateValue \"red\"\n  //handleTransformRotateYvalue transformRotateYvalue \"green\"\n  //handleTransformRotateXvalue transformRotateXvalue \"blue\"\n  //handlePerspectiveValue perspectiveValue \"cyan\"\n  return (\n    <div>\n      <AnimationTestController />\n      <AnimationTestController />\n      <AnimationTestController />\n      <AnimationTestController />\n      <p>transform: rotate: {transformRotateValue}</p>\n      <p>transfrom: rotateY: {transformRotateYvalue}</p>\n      <p>transform: rotateX: {transformRotateXvalue}</p>\n      <p>transform: perspective: {perspectiveValue}</p>\n      <div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport { AnimationTest };\n","import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTestController = ({ onChange, value, color }) => {\n  return (\n    <div style={{ position: \"relative\", height: \"25px\" }}>\n      <DraggableComponent\n        onChange={onChange}\n        valueX={value}\n        valueY={0}\n        height={25}\n        width={50}\n        backgroundColor={color}\n      />\n    </div>\n  );\n};\n\nexport { AnimationTestController };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n"],"names":["AnimationTest","transformRotateValue","setTransformRotateValue","useState","transformRotateYvalue","setTransformRotateYvalue","transformRotateXvalue","setTransformRotateXvalue","perspectiveValue","setPerspectiveValue","_jsxs","children","_jsx","AnimationTestController","_ref","onChange","value","color","style","position","height","DraggableComponent","valueX","valueY","width","backgroundColor","isDraggable","setIsDraggable","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientY","clientX","handleMouseUp","DraggableComponentStyle","onMouseDown","_ref2","top","left","DraggableComponentField","setValueY","setValueX","styled","div","_templateObject","_taggedTemplateLiteral","_ref4","_ref5"],"sourceRoot":""}