{"version":3,"file":"static/js/411.3257652e.chunk.js","mappings":"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","sources":["pages/TestPage.jsx","pages/test/DraggableComponent.jsx","pages/test/LogicGates.jsx","pages/test/PageChooser.jsx","pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { LogicGates, SimplestCustomRange, PageChooser } from \"./test\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <PageChooser\n        componentNames={[\"Logic gates\", \"Simplest custom range\"]}\n        currentComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && (\n        <SimplestCustomRange onChange={handleRangeValue} value={rangeValue} />\n      )}\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport default TestPage;\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst DraggableComponent = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n        A: {(inputA && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n        B: {(inputB && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n        C: {(inputC && \"true\") || \"false\"}\n      </button>\n      <p>{(output && \"true\") || \"false\"}</p>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","const PageChooser = ({ componentNames, currentComponentName, onChange }) => {\n  const chooseComponent = ({ target }) => {\n    onChange(target.value);\n  };\n\n  return (\n    <nav>\n      <ul>\n        {componentNames.map((value) => {\n          return (\n            <li key={value}>\n              <label htmlFor={value}>\n                <input\n                  id={value}\n                  name=\"chooseComponentRadio\"\n                  type=\"radio\"\n                  value={value}\n                  onChange={chooseComponent}\n                  checked={currentComponentName === value}\n                />\n                <span>{value}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageChooser };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n"],"names":["TestPage","componentName","setComponentName","useState","rangeValue","setRangeValue","_jsxs","children","_jsx","PageChooser","componentNames","currentComponentName","onChange","newComponentName","LogicGates","SimplestCustomRange","newRangeValue","value","DraggableComponent","_ref","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","handleMouseUp","RangeField","RangeDial","onMouseDown","_ref2","left","inputA","setInputA","inputB","setInputB","inputC","setInputC","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","chooseComponent","target","map","htmlFor","id","name","checked","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sourceRoot":""}