{"version":3,"file":"static/js/157.ec6e35d8.chunk.js","mappings":"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","sources":["pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx","pages/test/index.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase key={value} htmlFor={value}>\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              onChange={chooseComponent}\n              checked={componentName === value}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 18px;\n\n  margin-bottom: 50px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  margin-top: 28px;\n\n  height: 36px;\n\n  display: flex;\n  padding: 12px 50px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(52, 112, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(11, 68, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.input`\n  display: none;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useEffect, useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n        ]}\n        initialComponentName={\"Logic gates\"}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n    </section>\n  );\n};\n\nexport { TestPage };\n","import { TestPage } from \"./TestPage\";\n\nexport default TestPage;\n"],"names":["ComponentSelector","_ref","componentNames","initialComponentName","onChange","componentName","setComponentName","useState","chooseComponent","event","newComponentName","target","value","_jsx","ComponentSelectorContainerStyleBase","children","map","_jsxs","ComponentSelectorButtonStyleBase","htmlFor","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","styled","nav","_templateObject","_taggedTemplateLiteral","label","_templateObject2","isactive","input","_templateObject3","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","_ref2","left","CustomRangeField","rangeValue","setRangeValue","div","DraggableComponent","valueY","valueX","mouseDownY","setMouseDownY","handleMouseDown","clientY","DraggableComponentStyle","top","DraggableComponentField","setValueY","setValueX","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","concat","RecursionFunctionTest","recursionFunction2","number","TestPage"],"sourceRoot":""}