{"version":3,"file":"static/js/928.c71c3264.chunk.js","mappings":"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","sources":["pages/TestPages/TestPageOne.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx","pages/TestPages/testHooks/useKeyboard.js"],"sourcesContent":["import { Routes, Route } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n  TestPageLayout,\n  MoirTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TestPageLayout />}>\n        <Route\n          path=\"tests\"\n          element={\n            <div>\n              <CarFilterTest />\n              <DateAndTimeTest />\n              <FibonacciTest />\n              <FontsAndSVGimagesTest />\n              <PrimeNumbersTest />\n              <SquaresTest />\n            </div>\n          }\n        />\n        <Route path=\"stars\" element={<StarsEffectTest />} />\n        <Route path=\"moir\" element={<MoirTest />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default TestPageOne;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  position: relative;\n`;\n\nimport { useKeyboard } from \"../imports\";\n\nimport styled from \"@emotion/styled\";\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(() => {\n    const changeTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"s\") {\n        setTop(top + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeTop);\n    };\n  }, [top]);\n\n  useEffect(() => {\n    const changeLeft = (event) => {\n      if (event.type === \"keydown\" && event.key === \"a\") {\n        setLeft(left - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"d\") {\n        setLeft(left + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeLeft);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeLeft);\n    };\n  }, [left]);\n\n  useEffect(() => {\n    const changeAngle = (event) => {\n      if (event.type === \"keydown\" && event.key === \"q\") {\n        setAngle(angle - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"e\") {\n        setAngle(angle + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeAngle);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeAngle);\n    };\n  }, [angle]);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={100}\n        width={100}\n      />\n      <StripedSquare top={0} left={0} angle={0} height={500} width={1000} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 5px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= height / 5) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink to=\"tests\">Various tests</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"stars\">Stars effect test</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"moir\">Moir test</NavLink>\n        </li>\n      </ul>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n","const useKeyboard = (key, callback) => {\n  return () => {\n    const keydownCallback = (event) => {\n      if (event.type === \"keydown\" && event.key === key) {\n        callback(parameters);\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n"],"names":["TestPageOne","_jsx","Routes","children","_jsxs","Route","path","element","TestPageLayout","CarFilterTest","DateAndTimeTest","FibonacciTest","FontsAndSVGimagesTest","PrimeNumbersTest","SquaresTest","StarsEffectTest","MoirTest","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","style","width","time","setTime","useState","date","setDate","Date","useEffect","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","fontFamily","backgroundColor","SVGimage","name","MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","top","setTop","left","setLeft","angle","setAngle","changeTop","key","window","addEventListener","removeEventListener","changeLeft","changeAngle","StripedSquare","height","SquareStyleBase","_ref","_ref2","_ref3","_ref4","_ref5","StripeStyleBase","_templateObject2","_ref6","_ref7","color","_ref8","stripes","setStripes","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","Math","floor","squares","setSquares","getSquare","pow","CheapTrick","section","JustAnotherDiv","size","sizeValue","setSizeValue","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","random","setWhiteSpotCoordinates","setWhiteSpotSize","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","NavLink","to","Outlet","useKeyboard","callback","keydownCallback","parameters"],"sourceRoot":""}