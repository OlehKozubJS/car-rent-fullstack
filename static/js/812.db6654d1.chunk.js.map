{"version":3,"file":"static/js/812.db6654d1.chunk.js","mappings":"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","sources":["pages/FavouriteCarsPage.jsx","pages/MainPage.jsx","pages/TestPages/TestPageOne.jsx","pages/TestPages/TestPageTwo.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/MoirTest/StripedSquareStyle.js","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx","pages/TestPages/testHooks/useKeyboard.js","pages/TestPages/testHooks/useMultiple.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst FavouriteCarsPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default FavouriteCarsPage;\n","import { useState, useEffect } from \"react\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst MainPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarFilter />\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default MainPage;\n","import { Routes, Route, Outlet } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n  TestPageLayout,\n  MoirTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TestPageLayout />}>\n        <Route path=\"tests\" element={<Outlet />}>\n          <Route path=\"/dateAndTime\" element={<DateAndTimeTest />} />\n          <Route path=\"/fibonacci\" elemnt={<FibonacciTest />} />\n          <Route path=\"/primeNumbers\" element={<PrimeNumbersTest />} />\n          <Route path=\"/squares\" element={<SquaresTest />} />\n          <Route\n            path=\"/fontsAndSVGimages\"\n            element={<FontsAndSVGimagesTest />}\n          />\n          <Route path=\"/carFilter\" element={<CarFilterTest />} />\n        </Route>\n        <Route path=\"stars\" element={<StarsEffectTest />} />\n        <Route path=\"moir\" element={<MoirTest />} />\n      </Route>\n    </Routes>\n  );\n};\n/*\n\n<CarFilterTest />\n          <DateAndTimeTest />\n          <FibonacciTest />\n          <FontsAndSVGimagesTest />\n          <PrimeNumbersTest />\n          <SquaresTest />\n\n*/\nexport default TestPageOne;\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst TestPageTwo = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport default TestPageTwo;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  position: relative;\n`;\n\nimport { useKeyboard } from \"../imports\";\n\nimport styled from \"@emotion/styled\";\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(\n    useKeyboard(\"w\", () => {\n      setTop(top - 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"s\", () => {\n      setTop(top + 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"a\", () => {\n      setLeft(left - 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"d\", () => {\n      setLeft(left + 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"q\", () => {\n      setAngle(angle - 5);\n    }),\n    [angle]\n  );\n  useEffect(\n    useKeyboard(\"e\", () => {\n      setAngle(angle + 5);\n    }),\n    [angle]\n  );\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={100}\n        width={100}\n      />\n      <StripedSquare top={0} left={0} angle={0} height={500} width={500} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport { useMultiple } from \"../imports\";\n\nimport { SquareStyleBase, StripeStyleBase } from \"./StripedSquareStyle\";\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  let newStripes = [];\n\n  useMultiple(height / 5, 1, (number) => {\n    newStripes = [\n      ...newStripes,\n      <StripeStyleBase\n        key={number + 1}\n        color={number % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n        width={width}\n        stripeHeight={5}\n      ></StripeStyleBase>,\n    ];\n  });\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {newStripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","import styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: ${({ stripeHeight }) => {\n    return stripeHeight;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nexport { SquareStyleBase, StripeStyleBase };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink to=\"tests\">Various tests</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"stars\">Stars effect test</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"moir\">Moir test</NavLink>\n        </li>\n      </ul>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n","const useKeyboard = (keyName, callback) => {\n  return () => {\n    const keydownCallback = ({ type, key }) => {\n      if (type === \"keydown\" && key === keyName) {\n        callback();\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n","const useMultiple = (iterations, step, callback) => {\n  for (let iteration = 1; iteration < iterations; iteration += step) {\n    callback(iteration);\n  }\n};\n\nexport { useMultiple };\n"],"names":["_ref","cars","onFavouriteClick","isModal","setIsModal","useState","car","setCar","_jsxs","children","_jsx","CarModal","onClose","closeModal","CarGallery","onLearnMoreClick","newCar","CarFilter","TestPageOne","Routes","Route","path","element","TestPageLayout","Outlet","DateAndTimeTest","elemnt","FibonacciTest","PrimeNumbersTest","SquaresTest","FontsAndSVGimagesTest","CarFilterTest","StarsEffectTest","MoirTest","CheapTrick","styled","section","_templateObject","_taggedTemplateLiteral","JustAnotherDiv","div","_templateObject2","top","_ref2","left","_ref3","size","_ref4","TestPageTwo","sizeValue","setSizeValue","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","Math","floor","random","setWhiteSpotCoordinates","setWhiteSpotSize","useEffect","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","style","fontFamily","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","width","time","setTime","date","setDate","Date","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","backgroundColor","SVGimage","name","MoirTestStyleBase","setTop","setLeft","angle","setAngle","useKeyboard","StripedSquare","height","newStripes","useMultiple","number","StripeStyleBase","color","stripeHeight","SquareStyleBase","_ref5","_ref6","_ref7","_ref8","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","squares","setSquares","getSquare","pow","NavLink","to","keyName","callback","keydownCallback","key","window","addEventListener","removeEventListener","iterations","step","iteration"],"sourceRoot":""}