{"version":3,"file":"static/js/418.258ea1ca.chunk.js","mappings":"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","sources":["pages/TestPages/TestPageOne.jsx","pages/TestPages/TestPageTwo.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx"],"sourcesContent":["import { Routes, Route } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n  TestPageLayout,\n  MoirTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TestPageLayout />}>\n        <Route\n          path=\"tests\"\n          element={\n            <div>\n              <CarFilterTest />\n              <DateAndTimeTest />\n              <FibonacciTest />\n              <FontsAndSVGimagesTest />\n              <PrimeNumbersTest />\n              <SquaresTest />\n            </div>\n          }\n        />\n        <Route path=\"stars\" element={<StarsEffectTest />} />\n        <Route path=\"moir\" element={<MoirTest />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default TestPageOne;\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst TestPageTwo = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport default TestPageTwo;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  postion: relative;\n`;\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(200);\n  const [left, setLeft] = useState(200);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(() => {\n    const changeTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"s\") {\n        setTop(top + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeTop);\n    };\n  }, [top]);\n\n  useEffect(() => {\n    const changeLeft = (event) => {\n      if (event.type === \"keydown\" && event.key === \"a\") {\n        setLeft(left - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"d\") {\n        setLeft(left + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeLeft);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeLeft);\n    };\n  }, [left]);\n\n  useEffect(() => {\n    const changeAngle = (event) => {\n      if (event.type === \"keydown\" && event.key === \"q\") {\n        setAngle(angle - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"e\") {\n        setAngle(angle + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeAngle);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeAngle);\n    };\n  }, [angle]);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare top={top} left={left} angle={angle} />\n      <StripedSquare top={300} left={300} angle={90} height={500} width={500} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 5px;\n  width: 250px;\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= 50) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink to=\"tests\">Various tests</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"stars\">Stars effect test</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"moir\">Moir test</NavLink>\n        </li>\n      </ul>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n"],"names":["TestPageOne","_jsx","Routes","children","_jsxs","Route","path","element","TestPageLayout","CarFilterTest","DateAndTimeTest","FibonacciTest","FontsAndSVGimagesTest","PrimeNumbersTest","SquaresTest","StarsEffectTest","MoirTest","CheapTrick","styled","section","_templateObject","_taggedTemplateLiteral","JustAnotherDiv","div","_templateObject2","_ref","top","_ref2","left","_ref3","size","_ref4","TestPageTwo","sizeValue","setSizeValue","useState","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","Math","floor","random","setWhiteSpotCoordinates","setWhiteSpotSize","useEffect","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","style","fontFamily","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","width","time","setTime","date","setDate","Date","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","backgroundColor","SVGimage","name","MoirTestStyleBase","setTop","setLeft","angle","setAngle","changeTop","key","window","addEventListener","removeEventListener","changeLeft","changeAngle","StripedSquare","height","SquareStyleBase","_ref5","StripeStyleBase","_ref6","color","_ref7","stripes","setStripes","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","squares","setSquares","getSquare","pow","NavLink","to","Outlet"],"sourceRoot":""}