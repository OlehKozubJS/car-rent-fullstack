{"version":3,"file":"static/js/983.019a8572.chunk.js","mappings":"8wBAMA,MAAMA,EAAgBC,IAA0C,IAAzC,OAAEC,EAAM,MAAEC,EAAK,IAAEC,EAAG,KAAEC,EAAI,MAAEC,GAAOL,EACpDM,EAAa,GAcjB,OAZAC,EAAAA,EAAAA,aAAYN,EAAS,EAAG,GAAIO,IAC1BF,EAAa,IACRA,GACHG,EAAAA,EAAAA,KAACC,EAAAA,gBAAe,CAEdC,MAAOH,EAAS,IAAM,EAAI,uBAAyB,OACnDN,MAAOA,EACPU,aAAc,GAHTJ,EAAS,GAKjB,KAIDC,EAAAA,EAAAA,KAACI,EAAAA,gBAAe,CACdV,IAAKA,EACLC,KAAMA,EACNC,MAAOA,EACPJ,OAAQA,EACRC,MAAOA,EAAMY,SAEZR,GACe,C,uGC5BtB,MAAMO,EAAkBE,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oMAGzBlB,IAAc,IAAb,IAAEG,GAAKH,EACb,OAAOG,CAAG,IAGJgB,IAAe,IAAd,KAAEf,GAAMe,EACf,OAAOf,CAAI,IAITgB,IAAgB,IAAf,MAAEf,GAAOe,EACV,OAAOf,CAAK,IAINgB,IAAiB,IAAhB,OAAEpB,GAAQoB,EACnB,OAAOpB,CAAM,IAGNqB,IAAgB,IAAf,MAAEpB,GAAOoB,EACjB,OAAOpB,CAAK,IAOVQ,EAAkBK,EAAAA,EAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qEACtBM,IAAuB,IAAtB,aAAEZ,GAAcY,EACzB,OAAOZ,CAAY,IAGZa,IAAgB,IAAf,MAAEvB,GAAOuB,EACjB,OAAOvB,CAAK,IAGAwB,IAAgB,IAAf,MAAEf,GAAOe,EACtB,OAAOf,CAAK,G,qrBCzChB,MAAMgB,EAAcA,CAACC,EAASC,IACrB,KACL,MAAMC,EAAkB9B,IAAoB,IAAnB,KAAE+B,EAAI,IAAEC,GAAKhC,EACvB,YAAT+B,GAAsBC,IAAQJ,GAChCC,GACF,EAKF,OAFAI,OAAOC,iBAAiB,UAAWJ,GAE5B,KACLG,OAAOE,oBAAoB,UAAWL,EAAgB,CACvD,C,mDCZL,MAAMvB,EAAcA,CAAC6B,EAAYC,EAAMR,KACrC,IAAK,IAAIS,EAAY,EAAGA,EAAYF,EAAYE,GAAaD,EAC3DR,EAASS,EACX,C","sources":["pages/TestPage/testComponents/MoirTest/StripedSquare.jsx","pages/TestPage/testComponents/MoirTest/StripedSquareStyle.js","pages/TestPage/testHooks/useKeyboard.js","pages/TestPage/testHooks/useMultiple.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { useMultiple } from \"../imports\";\n\nimport { SquareStyleBase, StripeStyleBase } from \"./StripedSquareStyle\";\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  let newStripes = [];\n\n  useMultiple(height / 5, 1, (number) => {\n    newStripes = [\n      ...newStripes,\n      <StripeStyleBase\n        key={number + 1}\n        color={number % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n        width={width}\n        stripeHeight={5}\n      ></StripeStyleBase>,\n    ];\n  });\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {newStripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","import styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: ${({ stripeHeight }) => {\n    return stripeHeight;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nexport { SquareStyleBase, StripeStyleBase };\n","const useKeyboard = (keyName, callback) => {\n  return () => {\n    const keydownCallback = ({ type, key }) => {\n      if (type === \"keydown\" && key === keyName) {\n        callback();\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n","const useMultiple = (iterations, step, callback) => {\n  for (let iteration = 1; iteration < iterations; iteration += step) {\n    callback(iteration);\n  }\n};\n\nexport { useMultiple };\n"],"names":["StripedSquare","_ref","height","width","top","left","angle","newStripes","useMultiple","number","_jsx","StripeStyleBase","color","stripeHeight","SquareStyleBase","children","styled","div","_templateObject","_taggedTemplateLiteral","_ref2","_ref3","_ref4","_ref5","_templateObject2","_ref6","_ref7","_ref8","useKeyboard","keyName","callback","keydownCallback","type","key","window","addEventListener","removeEventListener","iterations","step","iteration"],"sourceRoot":""}