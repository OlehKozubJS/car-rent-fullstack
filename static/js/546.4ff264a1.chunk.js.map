{"version":3,"file":"static/js/546.4ff264a1.chunk.js","mappings":"+KAAA,MAAMA,EAAwBA,KAC5B,MAAMC,EAAqBC,GACrBA,GAAU,EACLA,EAEA,EAAIA,EAAS,EAAID,EAAkBC,EAAS,GAIvD,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,MACtBI,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,EAAkB,QAClB,C","sources":["pages/test/RecursionFunctionTest.jsx"],"sourcesContent":["const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>{recursionFunction(0)}</p>\n      <p>{recursionFunction(1)}</p>\n      <p>{recursionFunction(2)}</p>\n      <p>{recursionFunction(3)}</p>\n      <p>{recursionFunction(4)}</p>\n      <p>{recursionFunction(5)}</p>\n      <p>{recursionFunction(6)}</p>\n      <p>{recursionFunction(7)}</p>\n      <p>{recursionFunction(8)}</p>\n      <p>{recursionFunction(9)}</p>\n      <p>{recursionFunction(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n"],"names":["RecursionFunctionTest","recursionFunction","number","_jsxs","children","_jsx"],"sourceRoot":""}