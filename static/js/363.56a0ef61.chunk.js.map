{"version":3,"file":"static/js/363.56a0ef61.chunk.js","mappings":"4MAMA,MAAMA,EAAsBC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAC9C,MAAOG,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,GAyB7C,OAJAG,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,IAAoB,aAdNC,IAAkB,IAAjB,QAAEC,GAASD,EAClC,GAAIP,EAAa,CACf,MAAMS,EAAgBX,EAAQU,EAAUL,EAEpCM,GAAiB,GAAKA,GAAiB,KACzCV,EAASU,EAEb,KAO2D,CAACT,KAE9DK,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,IAAoB,WANRI,KACpBT,GAAe,EAAM,IAKkC,CAACD,KAGxDW,EAAAA,EAAAA,KAACC,EAAAA,WAAU,CAAAC,UACTF,EAAAA,EAAAA,KAACG,EAAAA,UAAS,CAACC,YAzBSC,IAAkB,IAAjB,QAAER,GAASQ,EAClCf,GAAe,GACfG,EAAcI,EAAQ,EAuBqBS,KAAMnB,KACpC,C,6FClCjB,MAAMc,EAAaM,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQvBP,EAAYI,EAAAA,EAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sIAGlBxB,IAAe,IAAd,KAAEoB,GAAMpB,EACf,OAAOoB,CAAI,IAOiBC,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0IAEjCL,IAAc,IAAb,IAAEQ,GAAKR,EACb,OAAOQ,CAAG,IAEJjB,IAAe,IAAd,KAAEU,GAAMV,EACf,OAAOU,CAAI,G","sources":["pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n"],"names":["SimplestCustomRange","_ref","value","onChange","isDraggable","setIsDraggable","useState","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","newRangeValue","handleMouseUp","_jsx","RangeField","children","RangeDial","onMouseDown","_ref2","left","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","top"],"sourceRoot":""}