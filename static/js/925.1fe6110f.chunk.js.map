{"version":3,"file":"static/js/925.1fe6110f.chunk.js","mappings":"yMASA,MAAMA,EAAoBC,IAInB,IAJoB,eACzBC,EAAc,qBACdC,EAAoB,SACpBC,GACDH,EACC,MAAOI,EAAeC,IAAoBC,EAAAA,EAAAA,UAASJ,GAE7CK,EAAmBC,IACvB,MAAMC,EAAmBD,EAAME,OAAOC,MACtCN,EAAiBI,GACjBN,EAASM,EAAiB,EAG5B,OACEG,EAAAA,EAAAA,KAACC,EAAAA,oCAAmC,CAAAC,SACjCb,EAAec,KAAKJ,IAEjBK,EAAAA,EAAAA,MAACC,EAAAA,iCAAgC,CAAaC,QAASP,EAAMG,SAAA,EAC3DF,EAAAA,EAAAA,KAACO,EAAAA,sCAAqC,CACpCC,GAAIT,EACJU,KAAK,uBACLC,KAAK,QACLX,MAAOA,EACPY,QAASnB,IAAkBO,EAC3BR,SAAUI,KAEZK,EAAAA,EAAAA,KAACY,EAAAA,0CAAyC,CAAAV,SACvCH,MAVkCA,MAeP,C,6OCtC1C,MAAME,EAAsCY,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2HAShDX,EAAmCQ,EAAAA,EAAOI,MAAKC,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iYAY/B5B,IAAmB,IAAlB,SAAE+B,GAAU/B,EAC/B,MAAoB,SAAb+B,EAAsB,oBAAsB,wBAAwB,IAczEZ,EAAwCM,EAAAA,EAAOO,MAAKC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4BAIpDJ,EAA4CC,EAAAA,EAAOO,MAAKE,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,2B","sources":["pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase key={value} htmlFor={value}>\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  column-gap: 18px;\n\n  margin-bottom: 50px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  margin-top: 28px;\n\n  height: 36px;\n\n  display: flex;\n  padding: 12px 50px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(52, 112, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(11, 68, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.input`\n  display: none;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n"],"names":["ComponentSelector","_ref","componentNames","initialComponentName","onChange","componentName","setComponentName","useState","chooseComponent","event","newComponentName","target","value","_jsx","ComponentSelectorContainerStyleBase","children","map","_jsxs","ComponentSelectorButtonStyleBase","htmlFor","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","styled","nav","_templateObject","_taggedTemplateLiteral","label","_templateObject2","isactive","input","_templateObject3","_templateObject4"],"sourceRoot":""}