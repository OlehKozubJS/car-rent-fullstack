{"version":3,"file":"static/js/812.7f03cbf7.chunk.js","mappings":"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","sources":["pages/FavouriteCarsPage.jsx","pages/MainPage.jsx","pages/TestPages/TestPageOne.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/MoirTest/StripedSquareStyle.js","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx","pages/TestPages/testHooks/useKeyboard.js","pages/TestPages/testHooks/useMultiple.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst FavouriteCarsPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default FavouriteCarsPage;\n","import { useState, useEffect } from \"react\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst MainPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarFilter />\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default MainPage;\n","import { Routes, Route, Outlet, NavLink } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n  TestPageLayout,\n  MoirTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TestPageLayout />}>\n        <Route\n          path=\"tests\"\n          element={\n            <div>\n              <nav>\n                <ul>\n                  <li>\n                    <NavLink to=\"dateAndTime\">Date and time</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"fibonacci\">Fibonacci</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"primeNumbers\">Prime numbers</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"squares\">Squares</NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"fontsAndSVGimages\">\n                      Fonts and SVG images\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink to=\"carFilter\">Car filter</NavLink>\n                  </li>\n                </ul>\n              </nav>\n              <Outlet />\n            </div>\n          }\n        >\n          <Route path=\"dateAndTime\" element={<DateAndTimeTest />} />\n          <Route path=\"fibonacci\" element={<FibonacciTest />} />\n          <Route path=\"primeNumbers\" element={<PrimeNumbersTest />} />\n          <Route path=\"squares\" element={<SquaresTest />} />\n          <Route path=\"fontsAndSVGimages\" element={<FontsAndSVGimagesTest />} />\n          <Route path=\"carFilter\" element={<CarFilterTest />} />\n        </Route>\n        <Route path=\"stars\" element={<StarsEffectTest />} />\n        <Route path=\"moir\" element={<MoirTest />} />\n      </Route>\n    </Routes>\n  );\n};\n/*\n\n<CarFilterTest />\n          <DateAndTimeTest />\n          <FibonacciTest />\n          <FontsAndSVGimagesTest />\n          <PrimeNumbersTest />\n          <SquaresTest />\n\n*/\nexport default TestPageOne;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  position: relative;\n`;\n\nimport { useKeyboard } from \"../imports\";\n\nimport styled from \"@emotion/styled\";\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(\n    useKeyboard(\"w\", () => {\n      setTop(top - 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"s\", () => {\n      setTop(top + 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"a\", () => {\n      setLeft(left - 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"d\", () => {\n      setLeft(left + 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"q\", () => {\n      setAngle(angle - 5);\n    }),\n    [angle]\n  );\n  useEffect(\n    useKeyboard(\"e\", () => {\n      setAngle(angle + 5);\n    }),\n    [angle]\n  );\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={100}\n        width={100}\n      />\n      <StripedSquare top={0} left={0} angle={0} height={500} width={500} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport { useMultiple } from \"../imports\";\n\nimport { SquareStyleBase, StripeStyleBase } from \"./StripedSquareStyle\";\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  let newStripes = [];\n\n  useMultiple(height / 5, 1, (number) => {\n    newStripes = [\n      ...newStripes,\n      <StripeStyleBase\n        key={number + 1}\n        color={number % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n        width={width}\n        stripeHeight={5}\n      ></StripeStyleBase>,\n    ];\n  });\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {newStripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","import styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: ${({ stripeHeight }) => {\n    return stripeHeight;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nexport { SquareStyleBase, StripeStyleBase };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to=\"tests\">Various tests</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"stars\">Stars effect test</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"moir\">Moir test</NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Outlet />\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n","const useKeyboard = (keyName, callback) => {\n  return () => {\n    const keydownCallback = ({ type, key }) => {\n      if (type === \"keydown\" && key === keyName) {\n        callback();\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n","const useMultiple = (iterations, step, callback) => {\n  for (let iteration = 1; iteration < iterations; iteration += step) {\n    callback(iteration);\n  }\n};\n\nexport { useMultiple };\n"],"names":["_ref","cars","onFavouriteClick","isModal","setIsModal","useState","car","setCar","_jsxs","children","_jsx","CarModal","onClose","closeModal","CarGallery","onLearnMoreClick","newCar","CarFilter","TestPageOne","Routes","Route","path","element","TestPageLayout","NavLink","to","Outlet","DateAndTimeTest","FibonacciTest","PrimeNumbersTest","SquaresTest","FontsAndSVGimagesTest","CarFilterTest","StarsEffectTest","MoirTest","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","style","width","time","setTime","date","setDate","Date","useEffect","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","fontFamily","backgroundColor","SVGimage","name","MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","top","setTop","left","setLeft","angle","setAngle","useKeyboard","StripedSquare","height","newStripes","useMultiple","number","StripeStyleBase","color","stripeHeight","SquareStyleBase","_ref2","_ref3","_ref4","_ref5","_templateObject2","_ref6","_ref7","_ref8","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","Math","floor","squares","setSquares","getSquare","pow","CheapTrick","section","JustAnotherDiv","size","sizeValue","setSizeValue","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","random","setWhiteSpotCoordinates","setWhiteSpotSize","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","keyName","callback","keydownCallback","key","window","addEventListener","removeEventListener","iterations","step","iteration"],"sourceRoot":""}