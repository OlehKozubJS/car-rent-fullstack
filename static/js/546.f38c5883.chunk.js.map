{"version":3,"file":"static/js/546.f38c5883.chunk.js","mappings":"+KAAA,MAAMA,EAAwBA,KAC5B,MAAMC,EAAqBC,GACrBA,GAAU,EACLA,EAEA,EAAIA,EAAS,EAAID,EAAkBC,EAAS,GAIvD,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBAAcH,EAAkB,OACnCE,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,iBAAeH,EAAkB,SAChC,C","sources":["pages/test/RecursionFunctionTest.jsx"],"sourcesContent":["const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction(0)}</p>\n      <p>Square of 1: {recursionFunction(1)}</p>\n      <p>Square of 2: {recursionFunction(2)}</p>\n      <p>Square of 3: {recursionFunction(3)}</p>\n      <p>Square of 4: {recursionFunction(4)}</p>\n      <p>Square of 5: {recursionFunction(5)}</p>\n      <p>Square of 6: {recursionFunction(6)}</p>\n      <p>Square of 7: {recursionFunction(7)}</p>\n      <p>Square of 8: {recursionFunction(8)}</p>\n      <p>Square of 9: {recursionFunction(9)}</p>\n      <p>Square of 10: {recursionFunction(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n"],"names":["RecursionFunctionTest","recursionFunction","number","_jsxs","children"],"sourceRoot":""}