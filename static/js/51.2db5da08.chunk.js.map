{"version":3,"file":"static/js/51.2db5da08.chunk.js","mappings":"sLAEA,MAAMA,EAAQA,KACZ,IAAIC,EAAQ,GAEZ,IAAK,IAAIC,EAAa,EAAGA,GAAc,KAAMA,GAAc,EACzDD,EAAQ,IACHA,GACHE,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAAkBC,UAAU,GAAtBH,IAIxB,OAAOD,CAAK,C,qGCHd,MAUMK,EAAoBA,KACxB,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,UAXPC,MAC3B,IAAIH,EAAY,GAEhB,IAAK,IAAIL,EAAa,EAAGA,GAAc,KAAMA,GAAc,EACzDK,EAAY,IAAIA,GAAW,GAG7B,OAAOA,CAAS,EAI2BG,IAI3C,OACEP,EAAAA,EAAAA,KAACQ,EAAAA,uBAAsB,CAACC,QAHHC,OAG2BC,SAC7CP,EAAUQ,KAAI,CAACC,EAAUd,KAEtBC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAAkBC,SAAUW,GAAtBd,MAGD,C,6GC7B7B,MAAMS,EAAyBM,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gMAanChB,EAAgBa,EAAAA,EAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,0LAQVE,IAAmB,IAAlB,SAAEjB,GAAUiB,EAC/B,OAAOjB,EAAW,eAAiB,oBAAoB,IAIhDkB,IAAmB,IAAlB,SAAElB,GAAUkB,EACpB,OAAOlB,EAAW,qBAAuB,cAAc,G","sources":["pages/test/CellularAutomaton/Cells.jsx","pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js"],"sourcesContent":["import { CellStyleBase } from \"./CellularAutomatonStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomaton = () => {\n  const [cellsData, setCellsData] = useState(createCellsDataArray());\n\n  const changeCellData = () => {};\n\n  return (\n    <CellularFieldStyleBase onClick={changeCellData}>\n      {cellsData.map((cellData, cellNumber) => {\n        return (\n          <CellStyleBase key={cellNumber} isActive={cellData}></CellStyleBase>\n        );\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return isActive ? \"rgb(0, 0, 0)\" : \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n  color: ${({ isActive }) => {\n    return isActive ? \"rgb(255, 255, 255)\" : \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n"],"names":["Cells","cells","cellNumber","_jsx","CellStyleBase","isActive","CellularAutomaton","cellsData","setCellsData","useState","createCellsDataArray","CellularFieldStyleBase","onClick","changeCellData","children","map","cellData","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","_ref2"],"sourceRoot":""}