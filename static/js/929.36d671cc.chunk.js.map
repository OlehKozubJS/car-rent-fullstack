{"version":3,"file":"static/js/929.36d671cc.chunk.js","mappings":"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","sources":["pages/test/AnimationTest/AnimationTest.jsx","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTest = () => {\n  const [transformRotateValue, setTransformRotateValue] = useState(0);\n  const [transformRotateYvalue, setTransformRotateYvalue] = useState(0);\n  const [transformRotateXvalue, setTransformRotateXvalue] = useState(0);\n  const [perspectiveValue, setPerspectiveValue] = useState(0);\n\n  const handleTransformRotateValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateValue(valueX);\n    }\n  };\n\n  const handleTransformRotateYvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateYvalue(valueX);\n    }\n  };\n\n  const handleTransformRotateXvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateXvalue(valueX);\n    }\n  };\n\n  const handlePerspectiveValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setPerspectiveValue(valueX);\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ position: \"relative\", height: \"25px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateValue}\n          valueX={transformRotateValue}\n          valueY={0}\n          height={25}\n          width={50}\n          backgroundColor={\"red\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"25px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateYvalue}\n          valueX={transformRotateYvalue}\n          valueY={0}\n          height={25}\n          width={50}\n          backgroundColor={\"green\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"25px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateXvalue}\n          valueX={transformRotateXvalue}\n          valueY={0}\n          height={25}\n          width={50}\n          backgroundColor={\"blue\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"25px\" }}>\n        <DraggableComponent\n          onChange={handlePerspectiveValue}\n          valueX={perspectiveValue}\n          valueY={0}\n          height={25}\n          width={50}\n          backgroundColor={\"cyan\"}\n        />\n      </div>\n      <p>transform: rotate: {transformRotateValue}</p>\n      <p>transfrom: rotateY: {transformRotateYvalue}</p>\n      <p>transform: rotateX: {transformRotateXvalue}</p>\n      <p>transform: rotateX: {perspectiveValue}</p>\n      <div></div>\n    </div>\n  );\n};\n\nexport { AnimationTest };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n"],"names":["AnimationTest","transformRotateValue","setTransformRotateValue","useState","transformRotateYvalue","setTransformRotateYvalue","transformRotateXvalue","setTransformRotateXvalue","perspectiveValue","setPerspectiveValue","_jsxs","children","_jsx","style","position","height","DraggableComponent","onChange","_ref","valueX","valueY","width","backgroundColor","_ref2","_ref3","_ref4","isDraggable","setIsDraggable","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","useEffect","handleEventListener","clientY","clientX","handleMouseUp","DraggableComponentStyle","onMouseDown","top","left","DraggableComponentField","setValueY","setValueX","styled","div","_templateObject","_taggedTemplateLiteral","_ref5"],"sourceRoot":""}