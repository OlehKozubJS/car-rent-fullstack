{"version":3,"file":"static/js/551.04b21a0d.chunk.js","mappings":"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","sources":["pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/MoirTest/StripedSquareStyle.js","pages/TestPages/testHooks/useKeyboard.js","pages/TestPages/testHooks/useMultiple.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  position: relative;\n`;\n\nimport { useKeyboard } from \"../imports\";\n\nimport styled from \"@emotion/styled\";\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(\n    useKeyboard(\"w\", () => {\n      setTop(top - 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"s\", () => {\n      setTop(top + 5);\n    }),\n    [top]\n  );\n  useEffect(\n    useKeyboard(\"a\", () => {\n      setLeft(left - 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"d\", () => {\n      setLeft(left + 5);\n    }),\n    [left]\n  );\n  useEffect(\n    useKeyboard(\"q\", () => {\n      setAngle(angle - 5);\n    }),\n    [angle]\n  );\n  useEffect(\n    useKeyboard(\"e\", () => {\n      setAngle(angle + 5);\n    }),\n    [angle]\n  );\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={500}\n        width={500}\n      />\n      <StripedSquare top={0} left={0} angle={0} height={500} width={1000} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport { useMultiple } from \"../imports\";\n\nimport { SquareStyleBase, StripeStyleBase } from \"./StripedSquareStyle\";\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  let newStripes = [];\n\n  useMultiple(height / 5, 1, (number) => {\n    newStripes = [\n      ...newStripes,\n      <StripeStyleBase\n        key={number + 1}\n        color={number % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n        width={width}\n      ></StripeStyleBase>,\n    ];\n  });\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {newStripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","import styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 5px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nexport { SquareStyleBase, StripeStyleBase };\n","const useKeyboard = (keyName, callback) => {\n  return () => {\n    const keydownCallback = ({ type, key }) => {\n      if (type === \"keydown\" && key === keyName) {\n        callback();\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n","const useMultiple = (iterations, step, callback) => {\n  for (let iteration = 1; iteration < iterations; iteration += step) {\n    callback(iteration);\n  }\n};\n\nexport { useMultiple };\n"],"names":["MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","MoirTest","top","setTop","useState","left","setLeft","angle","setAngle","useEffect","useKeyboard","_jsxs","children","_jsx","StripedSquare","height","width","_ref","newStripes","useMultiple","number","StripeStyleBase","color","SquareStyleBase","_ref2","_ref3","_ref4","_ref5","_templateObject2","_ref6","_ref7","keyName","callback","keydownCallback","type","key","window","addEventListener","removeEventListener","iterations","step","iteration"],"sourceRoot":""}