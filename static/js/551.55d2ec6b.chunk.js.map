{"version":3,"file":"static/js/551.55d2ec6b.chunk.js","mappings":"oNAMA,MAAMA,EAAoBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAI9BC,EAAWA,KACf,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,MACxBC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,KAkBjC,OAhBAG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeC,IACA,YAAfA,EAAMC,MAAoC,MAAdD,EAAME,KACpCR,EAAOD,EAAM,GACf,EAKF,OAFAU,OAAOC,iBAAiB,UAAWL,GAE5B,KACLI,OAAOE,oBAAoB,UAAWN,EAAY,CACnD,GACA,KAEHD,EAAAA,EAAAA,YAAU,QAAU,KAGlBQ,EAAAA,EAAAA,MAACnB,EAAiB,CAAAoB,SAAA,EAChBC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAAChB,IAAKA,EAAKG,KAAMA,KAC/BY,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAAChB,IAAK,IAAKG,KAAM,QACb,C,oGC9BxB,MAAMc,EAAkBtB,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oJAEzBoB,IAAc,IAAb,IAAElB,GAAKkB,EACb,OAAOlB,CAAG,IAEJmB,IAAe,IAAd,KAAEhB,GAAMgB,EACf,OAAOhB,CAAI,IAUTiB,EAAkBzB,EAAAA,EAAOC,IAAGyB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,gEAGlBwB,IAAgB,IAAf,MAAEC,GAAOD,EACtB,OAAOC,CAAK,IAIVP,EAAgBQ,IAAoB,IAAnB,IAAExB,EAAG,KAAEG,GAAMqB,EAClC,MAAOC,EAASC,IAAcxB,EAAAA,EAAAA,UAAS,IAgBvC,OAdAG,EAAAA,EAAAA,YAAU,KACJoB,EAAQE,QAAU,IAItBD,EAAW,IACND,GACHV,EAAAA,EAAAA,KAACK,EAAe,CAEdG,MAAOE,EAAQE,OAAS,IAAM,EAAI,uBAAyB,QADtDF,EAAQE,OAAS,IAGxB,GACD,CAACF,KAGFV,EAAAA,EAAAA,KAACE,EAAe,CAACjB,IAAKA,EAAKG,KAAMA,EAAKW,SACnCW,GACe,C","sources":["pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  postion: relative;\n`;\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(200);\n  const [left, setLeft] = useState(200);\n\n  useEffect(() => {\n    const increaseTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top + 10);\n      }\n    };\n\n    window.addEventListener(\"keydown\", increaseTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", increaseTop);\n    };\n  }, []);\n\n  useEffect(() => {}, []);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare top={top} left={left} />\n      <StripedSquare top={300} left={300} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: 250px;\n  width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 10px;\n  width: 250px;\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ top, left }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= 25) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase top={top} left={left}>\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n"],"names":["MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","MoirTest","top","setTop","useState","left","setLeft","useEffect","increaseTop","event","type","key","window","addEventListener","removeEventListener","_jsxs","children","_jsx","StripedSquare","SquareStyleBase","_ref","_ref2","StripeStyleBase","_templateObject2","_ref3","color","_ref4","stripes","setStripes","length"],"sourceRoot":""}