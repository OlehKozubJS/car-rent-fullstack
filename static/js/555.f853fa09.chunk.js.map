{"version":3,"file":"static/js/555.f853fa09.chunk.js","mappings":"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","sources":["pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx"],"sourcesContent":["const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  postion: relative;\n`;\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(200);\n  const [left, setLeft] = useState(200);\n\n  useEffect(() => {\n    const increaseTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 10);\n      }\n    };\n\n    window.addEventListener(\"keydown\", increaseTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", increaseTop);\n    };\n  }, [top]);\n\n  useEffect(() => {}, []);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare top={top} left={left} />\n      <StripedSquare top={300} left={300} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: 250px;\n  width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 10px;\n  width: 250px;\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ top, left }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= 25) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase top={top} left={left}>\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink to=\"tests\">Various tests</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"stars\">Stars effect test</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"moir\">Moir test</NavLink>\n        </li>\n      </ul>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n"],"names":["CarFilterTest","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","_jsxs","onSubmit","preventDefault","children","_jsx","htmlFor","id","type","placeholder","onChange","style","width","DateAndTimeTest","time","setTime","useState","date","setDate","Date","useEffect","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","FibonacciTest","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","FontsAndSVGimagesTest","fontFamily","backgroundColor","SVGimage","name","MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","MoirTest","top","setTop","left","setLeft","increaseTop","key","window","addEventListener","removeEventListener","StripedSquare","SquareStyleBase","_ref","_ref2","StripeStyleBase","_templateObject2","_ref3","color","_ref4","stripes","setStripes","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","PrimeNumbersTest","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","Math","floor","SquaresTest","squares","setSquares","getSquare","pow","CheapTrick","section","JustAnotherDiv","size","StarsEffectTest","sizeValue","setSizeValue","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","random","setWhiteSpotCoordinates","setWhiteSpotSize","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","TestPageLayout","NavLink","to","Outlet"],"sourceRoot":""}