{"version":3,"file":"static/js/157.c69f6e73.chunk.js","mappings":"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","sources":["pages/test/DraggableComponent.jsx","pages/test/LogicGates.jsx","pages/test/PageChooser.jsx","pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst DraggableComponent = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(0);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: value + clientY - mouseDownY,\n        valueX: value + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>;\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n        A: {(inputA && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n        B: {(inputB && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n        C: {(inputC && \"true\") || \"false\"}\n      </button>\n      <p>{(output && \"true\") || \"false\"}</p>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","const PageChooser = ({ componentNames, currentComponentName, onChange }) => {\n  const chooseComponent = ({ target }) => {\n    onChange(target.value);\n  };\n\n  return (\n    <nav>\n      <ul>\n        {componentNames.map((value) => {\n          return (\n            <li key={value}>\n              <label htmlFor={value}>\n                <input\n                  id={value}\n                  name=\"chooseComponentRadio\"\n                  type=\"radio\"\n                  value={value}\n                  onChange={chooseComponent}\n                  checked={currentComponentName === value}\n                />\n                <span>{value}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageChooser };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n"],"names":["DraggableComponent","_ref","value","onChange","isDraggable","setIsDraggable","useState","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","handleMouseDown","_ref2","clientY","clientX","useEffect","handleEventListener","_ref3","valueY","valueX","handleMouseUp","_jsx","RangeDial","onMouseDown","left","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","_jsxs","children","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","PageChooser","componentNames","currentComponentName","chooseComponent","target","map","htmlFor","id","name","checked","SimplestCustomRange","newRangeValue","RangeField","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","top"],"sourceRoot":""}