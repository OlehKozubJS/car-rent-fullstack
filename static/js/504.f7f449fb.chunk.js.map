{"version":3,"file":"static/js/504.f7f449fb.chunk.js","mappings":"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","sources":["pages/test/CellularAutomaton/Cells.jsx","pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js","pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverField.jsx","pages/test/GradientHover/GradientHoverFieldStyle.js","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx"],"sourcesContent":["import { CellStyleBase } from \"./CellularAutomatonStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomaton = () => {\n  const [cellsData, setCellsData] = useState(createCellsDataArray());\n\n  return (\n    <CellularFieldStyleBase>\n      {cellsData.map(() => {\n        return <CellStyleBase />;\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return isActive ? \"rgb(0, 0, 0)\" : \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n  color: ${({ isActive }) => {\n    return isActive ? \"rgb(255, 255, 255)\" : \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase\n            key={value}\n            htmlFor={value}\n            isactive={(componentName === value).toString()}\n          >\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n\n  margin-bottom: 10px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  height: 24px;\n\n  display: flex;\n  padding-inline: 24px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(112, 52, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(68, 11, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.span`\n  display: inline;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradientHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n      setGradientLeft(-40);\n      setIsGradientAnimation(false);\n    } else {\n      setGradientLeft(gradientLeft + 5);\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <GradientHoverStyleBase\n      onMouseOver={handleMouseOver}\n      backgroundimage={setLinearGradient(gradientLeft)}\n    ></GradientHoverStyleBase>\n  );\n};\n\nexport { GradientHover };\n","import { GradientHover } from \"./GradientHover\";\n\nimport { GradientHoverFieldStyleBase } from \"./GradientHoverFieldStyle\";\n\nconst GradientHoverField = () => {\n  return (\n    <div>\n      <GradientHoverFieldStyleBase>\n        Gradient hover\n        <GradientHover />\n      </GradientHoverFieldStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHoverField };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverFieldStyleBase = styled.div`\n  height: 150px;\n  width: 800px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nexport { GradientHoverFieldStyleBase };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\nimport { GradientHoverField } from \"./GradientHover\";\nimport { CellularAutomaton } from \"./CellularAutomaton\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Cellular automaton\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n          \"Gradient hover\",\n          \"Cellular automaton\",\n        ]}\n        initialComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n      {componentName === \"Gradient hover\" && <GradientHoverField />}\n      {componentName === \"Cellular automaton\" && <CellularAutomaton />}\n    </section>\n  );\n};\n\nexport { TestPage };\n"],"names":["Cells","cells","cellNumber","_jsx","CellStyleBase","isActive","CellularAutomaton","cellsData","setCellsData","useState","createCellsDataArray","CellularFieldStyleBase","children","map","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","_ref2","ComponentSelector","componentNames","initialComponentName","onChange","componentName","setComponentName","chooseComponent","event","newComponentName","target","value","ComponentSelectorContainerStyleBase","_jsxs","ComponentSelectorButtonStyleBase","htmlFor","isactive","toString","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","nav","label","input","_templateObject3","span","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","left","CustomRangeField","rangeValue","setRangeValue","DraggableComponent","valueY","valueX","mouseDownY","setMouseDownY","handleMouseDown","clientY","DraggableComponentStyle","top","DraggableComponentField","setValueY","setValueX","GradientHover","isGradientAnimation","setIsGradientAnimation","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","animation","setInterval","clearInterval","GradientHoverStyleBase","onMouseOver","parentNode","backgroundimage","setLinearGradient","GradientHoverField","GradientHoverFieldStyleBase","concat","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","RecursionFunctionTest","recursionFunction2","number","TestPage"],"sourceRoot":""}