{"version":3,"file":"static/js/504.d72aa8b7.chunk.js","mappings":"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","sources":["pages/test/DraggableComponent.jsx","pages/test/LogicGates.jsx","pages/test/PageChooser.jsx","pages/test/RecursionFunctionTest.jsx","pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js","pages/test/TestPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { DraggableComponentStyle } from \"./SimplestCustomRangeStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","const PageChooser = ({ componentNames, currentComponentName, onChange }) => {\n  const chooseComponent = ({ target }) => {\n    onChange(target.value);\n  };\n\n  return (\n    <nav>\n      <ul>\n        {componentNames.map((value) => {\n          return (\n            <li key={value}>\n              <label htmlFor={value}>\n                <input\n                  id={value}\n                  name=\"chooseComponentRadio\"\n                  type=\"radio\"\n                  value={value}\n                  onChange={chooseComponent}\n                  checked={currentComponentName === value}\n                />\n                <span>{value}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageChooser };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return (\n        3 * recursionFunction(number - 1) +\n        3 * number -\n        2 +\n        recursionFunction2(number - 1)\n      );\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction(7)}</p>\n      <p>Square of 8: {recursionFunction(8)}</p>\n      <p>Square of 9: {recursionFunction(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1\n\n*/\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial, DraggableComponentStyle };\n","import { useEffect, useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { SimplestCustomRange } from \"./SimplestCustomRange\";\nimport { PageChooser } from \"./PageChooser\";\nimport { DraggableComponent } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./RecursionFunctionTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n  const [rangeValue, setRangeValue] = useState(0);\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <PageChooser\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n        ]}\n        currentComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && (\n        <SimplestCustomRange onChange={handleRangeValue} value={rangeValue} />\n      )}\n      {componentName === \"Draggable component\" && (\n        <DraggableComponent\n          valueY={valueY}\n          valueX={valueX}\n          onChange={handleXYvalue}\n        />\n      )}\n      <p>{rangeValue}</p>\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n      <div>\n        <form onSubmit={handlePagePath}>\n          <input\n            name=\"pageNameInput\"\n            type=\"text\"\n            placeholder=\"Enter page name\"\n          />\n          <button type=\"submit\">Enter</button>\n        </form>\n        <Navigate to={`/${pagePath}`} />\n      </div>\n      <RecursionFunctionTest />\n    </section>\n  );\n};\n\nexport { TestPage };\n"],"names":["DraggableComponent","_ref","valueY","valueX","onChange","isDraggable","setIsDraggable","useState","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","handleMouseDown","_ref2","clientY","clientX","useEffect","handleEventListener","_ref3","handleMouseUp","_jsx","DraggableComponentStyle","onMouseDown","top","left","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","_jsxs","children","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","PageChooser","componentNames","currentComponentName","chooseComponent","target","value","map","htmlFor","id","name","checked","RecursionFunctionTest","recursionFunction","number","recursionFunction2","SimplestCustomRange","newRangeValue","RangeField","RangeDial","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","TestPage","componentName","setComponentName","rangeValue","setRangeValue","setValueY","setValueX","pagePath","setPagePath","newComponentName","onSubmit","event","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","concat"],"sourceRoot":""}