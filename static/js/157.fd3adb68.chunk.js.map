{"version":3,"file":"static/js/157.fd3adb68.chunk.js","mappings":"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","sources":["pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js","pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverField.jsx","pages/test/GradientHover/GradientHoverFieldStyle.js","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx","pages/test/index.js"],"sourcesContent":["import { CellularFieldStyleBase } from \"./CellularAutomatonStyle\";\n\nconst CellularAutomaton = () => {\n  return <CellularFieldStyleBase></CellularFieldStyleBase>;\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase\n            key={value}\n            htmlFor={value}\n            isactive={(componentName === value).toString()}\n          >\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n\n  margin-bottom: 10px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  height: 24px;\n\n  display: flex;\n  padding-inline: 24px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(112, 52, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(68, 11, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.span`\n  display: inline;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradientHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n      setGradientLeft(-40);\n      setIsGradientAnimation(false);\n    } else {\n      setGradientLeft(gradientLeft + 5);\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <GradientHoverStyleBase\n      onMouseOver={handleMouseOver}\n      backgroundimage={setLinearGradient(gradientLeft)}\n    ></GradientHoverStyleBase>\n  );\n};\n\nexport { GradientHover };\n","import { GradientHover } from \"./GradientHover\";\n\nimport { GradientHoverFieldStyleBase } from \"./GradientHoverFieldStyle\";\n\nconst GradientHoverField = () => {\n  return (\n    <div>\n      <GradientHoverFieldStyleBase>\n        Gradient hover\n        <GradientHover />\n      </GradientHoverFieldStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHoverField };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverFieldStyleBase = styled.div`\n  height: 150px;\n  width: 800px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nexport { GradientHoverFieldStyleBase };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\nimport { GradientHoverField } from \"./GradientHover\";\nimport { CellularAutomaton } from \"./CellularAutomaton\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Gradient hover\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n          \"Gradient hover\",\n          \"Cellular automaton\",\n        ]}\n        initialComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n      {componentName === \"Gradient hover\" && <GradientHoverField />}\n      {componentName === \"Cellular automaton\" && <CellularAutomaton />}\n    </section>\n  );\n};\n\nexport { TestPage };\n","import { TestPage } from \"./TestPage\";\n\nexport default TestPage;\n"],"names":["CellularAutomaton","_jsx","CellularFieldStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","CellStyleBase","_templateObject2","ComponentSelector","_ref","componentNames","initialComponentName","onChange","componentName","setComponentName","useState","chooseComponent","event","newComponentName","target","value","ComponentSelectorContainerStyleBase","children","map","_jsxs","ComponentSelectorButtonStyleBase","htmlFor","isactive","toString","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","nav","label","input","_templateObject3","span","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","_ref2","left","CustomRangeField","rangeValue","setRangeValue","DraggableComponent","valueY","valueX","mouseDownY","setMouseDownY","handleMouseDown","clientY","DraggableComponentStyle","top","DraggableComponentField","setValueY","setValueX","GradientHover","isGradientAnimation","setIsGradientAnimation","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","animation","setInterval","clearInterval","GradientHoverStyleBase","onMouseOver","parentNode","backgroundimage","setLinearGradient","GradientHoverField","GradientHoverFieldStyleBase","concat","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","RecursionFunctionTest","recursionFunction2","number","TestPage"],"sourceRoot":""}