{"version":3,"file":"static/js/551.dcdae06b.chunk.js","mappings":"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","sources":["pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testHooks/useKeyboard.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  position: relative;\n`;\n\nimport { useKeyboard } from \"../imports\";\n\nimport styled from \"@emotion/styled\";\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(0);\n  const [left, setLeft] = useState(0);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(useKeyboard(setTop(top - 5), \"w\"), [top]);\n  useEffect(useKeyboard(setTop(top + 5), \"s\"), [top]);\n  useEffect(useKeyboard(setLeft()), [left]);\n\n  useEffect(() => {\n    const changeTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"s\") {\n        setTop(top + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeTop);\n    };\n  }, [top]);\n\n  useEffect(() => {\n    const changeLeft = (event) => {\n      if (event.type === \"keydown\" && event.key === \"a\") {\n        setLeft(left - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"d\") {\n        setLeft(left + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeLeft);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeLeft);\n    };\n  }, [left]);\n\n  useEffect(() => {\n    const changeAngle = (event) => {\n      if (event.type === \"keydown\" && event.key === \"q\") {\n        setAngle(angle - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"e\") {\n        setAngle(angle + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeAngle);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeAngle);\n    };\n  }, [angle]);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={100}\n        width={100}\n      />\n      <StripedSquare top={0} left={0} angle={0} height={500} width={1000} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 5px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= height / 5) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","const useKeyboard = (keyName, callback) => {\n  return () => {\n    const keydownCallback = ({ type, key }) => {\n      if (type === \"keydown\" && key === keyName) {\n        callback();\n      }\n    };\n\n    window.addEventListener(\"keydown\", keydownCallback);\n\n    return () => {\n      window.removeEventListener(\"keydown\", keydownCallback);\n    };\n  };\n};\n\nexport { useKeyboard };\n"],"names":["MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","MoirTest","top","setTop","useState","left","setLeft","angle","setAngle","useEffect","useKeyboard","changeTop","event","type","key","window","addEventListener","removeEventListener","changeLeft","changeAngle","_jsxs","children","_jsx","StripedSquare","height","width","SquareStyleBase","_ref","_ref2","_ref3","_ref4","_ref5","StripeStyleBase","_templateObject2","_ref6","_ref7","color","_ref8","stripes","setStripes","length","keyName","callback","keydownCallback"],"sourceRoot":""}