{"version":3,"file":"static/js/504.e2cd2d05.chunk.js","mappings":"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","sources":["pages/test/AnimationTest/AnimationTest.jsx","pages/test/CellularAutomaton/Cells.jsx","pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js","pages/test/CellularAutomatonLite/CellularAutomatonLite.jsx","pages/test/CellularAutomatonLite/CellularAutomatonLiteStyle.js","pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverField.jsx","pages/test/GradientHover/GradientHoverFieldStyle.js","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTest = () => {\n  const [transformRotateValue, setTransformRotateValue] = useState(0);\n  const [transformRotateYvalue, setTransformRotateYvalue] = useState(0);\n  const [transformRotateXvalue, setTransformRotateXvalue] = useState(0);\n\n  const handleTransformRotateValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateValue(valueX);\n    }\n  };\n\n  const handleTransformRotateYvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateYvalue(valueX);\n    }\n  };\n\n  const handleTransformRotateXvalue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateXvalue(valueX);\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateValue}\n          valueX={transformRotateValue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"red\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateYvalue}\n          valueX={transformRotateYvalue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"green\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateXvalue}\n          valueX={transformRotateXvalue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"blue\"}\n        />\n      </div>\n      <p>{transformRotateValue}</p>\n      <p>{transformRotateYvalue}</p>\n      <p>{transformRotateXvalue}</p>\n      <div></div>\n    </div>\n  );\n};\n\nexport { AnimationTest };\n","import { CellStyleBase } from \"./CellularAutomatonStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomaton = () => {\n  const [cellsData, setCellsData] = useState(createCellsDataArray());\n\n  const changeCellData = ({ target }) => {\n    setCellsData(\n      cellsData.map((cellData, cellNumber) => {\n        if (Number(target.dataset.number) === cellNumber) {\n          return !cellData;\n        } else {\n          return cellData;\n        }\n      })\n    );\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={changeCellData}>\n      {cellsData.map((cellData, cellNumber) => {\n        return (\n          <CellStyleBase\n            key={cellNumber}\n            data-number={cellNumber}\n            isActive={cellData}\n          ></CellStyleBase>\n        );\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return isActive ? \"rgb(0, 0, 0)\" : \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n  color: ${({ isActive }) => {\n    return isActive ? \"rgb(255, 255, 255)\" : \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonLiteStyle\";\n\nconst CellularAutomatonLite = () => {\n  const [cellsData, setCellsData] = useState([]);\n\n  const getCellPosition = (event) => {\n    const { clientY, clientX, currentTarget } = event;\n    const { top, left } = currentTarget.getBoundingClientRect();\n    const y = clientY - top;\n    const x = clientX - left;\n    const cellY = y - (y % 10);\n    const cellX = x - (x % 10);\n\n    return { cellY, cellX };\n  };\n\n  const getIsCell = (cells, cellY, cellX) => {\n    return cells.some(\n      (cell) => cell.props.top === cellY && cell.props.left === cellX\n    );\n  };\n\n  const removeCell = (cells, cellY, cellX) => {\n    return cells.filter(\n      (cell) => !(cell.props.top === cellY && cell.props.left === cellX)\n    );\n  };\n\n  const addCellData = (event) => {\n    const { cellY, cellX } = getCellPosition(event);\n\n    if (getIsCell(cellsData, cellY, cellX)) {\n      setCellsData(removeCell(cellsData, cellY, cellX));\n    } else {\n      setCellsData([\n        ...cellsData,\n\n        <CellStyleBase\n          key={`${cellY}, ${cellX}`}\n          top={cellY}\n          left={cellX}\n          isActive={true}\n        ></CellStyleBase>,\n      ]);\n    }\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={addCellData}>\n      {cellsData.map((cell) => {\n        return cell;\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomatonLite };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n\n  position: relative;\n`;\n\nconst CellStyleBase = styled.div`\n  position: absolute;\n\n  height: 10px;\n  width: 10px;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return (isActive && \"rgb(0, 0, 0)\") || \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n\n  color: ${({ isActive }) => {\n    return (isActive && \"rgb(255, 255, 255)\") || \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase\n            key={value}\n            htmlFor={value}\n            isactive={(componentName === value).toString()}\n          >\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n\n  margin-bottom: 10px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  height: 24px;\n\n  display: flex;\n  padding-inline: 24px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(112, 52, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(68, 11, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.span`\n  display: inline;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n","import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradientHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n      setGradientLeft(-40);\n      setIsGradientAnimation(false);\n    } else {\n      setGradientLeft(gradientLeft + 5);\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <GradientHoverStyleBase\n      onMouseOver={handleMouseOver}\n      backgroundimage={setLinearGradient(gradientLeft)}\n    ></GradientHoverStyleBase>\n  );\n};\n\nexport { GradientHover };\n","import { GradientHover } from \"./GradientHover\";\n\nimport { GradientHoverFieldStyleBase } from \"./GradientHoverFieldStyle\";\n\nconst GradientHoverField = () => {\n  return (\n    <div>\n      <GradientHoverFieldStyleBase>\n        Gradient hover\n        <GradientHover />\n      </GradientHoverFieldStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHoverField };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverFieldStyleBase = styled.div`\n  height: 150px;\n  width: 800px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nexport { GradientHoverFieldStyleBase };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\nimport { GradientHoverField } from \"./GradientHover\";\nimport { CellularAutomaton } from \"./CellularAutomaton\";\nimport { CellularAutomatonLite } from \"./CellularAutomatonLite\";\nimport { AnimationTest } from \"./AnimationTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Animation test\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n          \"Gradient hover\",\n          \"Cellular automaton\",\n          \"Cellular automaton lite\",\n          \"Animation test\",\n        ]}\n        initialComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n      {componentName === \"Gradient hover\" && <GradientHoverField />}\n      {componentName === \"Cellular automaton\" && <CellularAutomaton />}\n      {componentName === \"Cellular automaton lite\" && <CellularAutomatonLite />}\n      {componentName === \"Animation test\" && <AnimationTest />}\n    </section>\n  );\n};\n\nexport { TestPage };\n"],"names":["AnimationTest","transformRotateValue","setTransformRotateValue","useState","transformRotateYvalue","setTransformRotateYvalue","transformRotateXvalue","setTransformRotateXvalue","_jsxs","children","_jsx","style","position","height","DraggableComponent","onChange","_ref","valueX","valueY","width","backgroundColor","_ref2","_ref3","Cells","cells","cellNumber","CellStyleBase","isActive","CellularAutomaton","cellsData","setCellsData","createCellsDataArray","CellularFieldStyleBase","onClick","target","map","cellData","Number","dataset","number","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","CellularAutomatonLite","event","cellY","cellX","clientY","clientX","currentTarget","top","left","getBoundingClientRect","y","x","getCellPosition","getIsCell","some","cell","props","removeCell","filter","concat","_ref4","ComponentSelector","componentNames","initialComponentName","componentName","setComponentName","chooseComponent","newComponentName","value","ComponentSelectorContainerStyleBase","ComponentSelectorButtonStyleBase","htmlFor","isactive","toString","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","nav","label","input","_templateObject3","span","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","CustomRangeField","rangeValue","setRangeValue","mouseDownY","setMouseDownY","DraggableComponentStyle","DraggableComponentField","setValueY","setValueX","_ref5","GradientHover","isGradientAnimation","setIsGradientAnimation","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","animation","setInterval","clearInterval","GradientHoverStyleBase","onMouseOver","parentNode","backgroundimage","setLinearGradient","GradientHoverField","GradientHoverFieldStyleBase","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","elements","pageNameInput","reset","placeholder","Navigate","to","RecursionFunctionTest","recursionFunction2","TestPage"],"sourceRoot":""}