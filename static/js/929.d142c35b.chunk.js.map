{"version":3,"file":"static/js/929.d142c35b.chunk.js","mappings":"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","sources":["pages/test/AnimationTest/AnimationTest.jsx","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTest = () => {\n  const [transformRotateValue, setTransformRotateValue] = useState(0);\n\n  const handleTransformRotateValue = ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      setTransformRotateValue(valueX);\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateValue}\n          valueX={transformRotateValue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"red\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateValue}\n          valueX={transformRotateValue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"green\"}\n        />\n      </div>\n      <div style={{ position: \"relative\", height: \"50px\" }}>\n        <DraggableComponent\n          onChange={handleTransformRotateValue}\n          valueX={transformRotateValue}\n          valueY={0}\n          height={50}\n          width={150}\n          backgroundColor={\"blue\"}\n        />\n      </div>\n      <p>{transformRotateValue}</p>\n      <div></div>\n    </div>\n  );\n};\n\nexport { AnimationTest };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n"],"names":["AnimationTest","transformRotateValue","setTransformRotateValue","useState","handleTransformRotateValue","_ref","valueX","_jsxs","children","_jsx","style","position","height","DraggableComponent","onChange","valueY","width","backgroundColor","isDraggable","setIsDraggable","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientY","clientX","handleMouseUp","DraggableComponentStyle","onMouseDown","_ref2","top","left","DraggableComponentField","setValueY","setValueX","styled","div","_templateObject","_taggedTemplateLiteral","_ref4","_ref5"],"sourceRoot":""}