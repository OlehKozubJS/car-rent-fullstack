{"version":3,"file":"static/js/569.8629fc4c.chunk.js","mappings":"yNAWA,MAAMA,EAAgBA,KACpB,MAAOC,EAAqBC,IAA0BC,EAAAA,EAAAA,WAAS,IACxDC,EAAuBC,IAA4BF,EAAAA,EAAAA,UAAS,CAAC,IAC7DG,EAAcC,IAAmBJ,EAAAA,EAAAA,WAAU,IAuBlD,OALAK,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,KAhBgBC,KACpBT,IACEK,GAAgBF,EAAsBO,YAAc,IACtDT,IACAA,GAAuB,IAEvBK,EAAgBD,EAAe,GAEnC,GAQ0C,IAAK,CAC/CL,EACAK,KAIAM,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAACC,EAAAA,oCAAmC,CAAAF,SAAA,CAAC,kBAEnCD,EAAAA,EAAAA,KAACI,EAAAA,wCAAuC,CACtCC,YAfiBC,IACvBb,EAAyBa,EAAMC,OAAOC,YACtClB,GAAuB,EAAK,EActBmB,iBAAiBC,EAAAA,EAAAA,mBAAkBhB,SAGnC,C,oJC5CV,MAAMS,EAAsCQ,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHAUhDV,EAA0CO,EAAAA,GAAOC,IAAGG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,iKAUpCE,IAA0B,IAAzB,gBAAEP,GAAiBO,EACtC,OAAOP,CAAe,G,yDCvB1B,MAAMC,EAAqBhB,GACnB,6FAANuB,OAIIvB,EAAY,uCAAAuB,OAEZvB,EAAe,GAAE,uCAAAuB,OAEjBvB,EAAe,GAAE,uCAAAuB,OAEjBvB,EAAe,GAAE,W","sources":["pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"../../../hooks\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport {\n  GradientHoverTestComponentStyleBase,\n  GradientHoverGradientComponentStyleBase,\n} from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (isGradientAnimation) {\n      if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n        setIsGradientAnimation();\n        setIsGradientAnimation(false);\n      } else {\n        setGradientLeft(gradientLeft + 5);\n      }\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(handleInterval(gradientAnimation, 50), [\n    isGradientAnimation,\n    gradientLeft,\n  ]);\n\n  return (\n    <div>\n      <GradientHoverTestComponentStyleBase>\n        Gradient hover\n        <GradientHoverGradientComponentStyleBase\n          onMouseOver={handleMouseOver}\n          backgroundimage={setLinearGradient(gradientLeft)}\n        ></GradientHoverGradientComponentStyleBase>\n      </GradientHoverTestComponentStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHover };\n","import styled from \"styled-components\";\n\nconst GradientHoverTestComponentStyleBase = styled.div`\n  height: 250px;\n  width: 400px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nconst GradientHoverGradientComponentStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport {\n  GradientHoverTestComponentStyleBase,\n  GradientHoverGradientComponentStyleBase,\n};\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n"],"names":["GradientHover","isGradientAnimation","setIsGradientAnimation","useState","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","useEffect","handleInterval","gradientAnimation","offsetWidth","_jsx","children","_jsxs","GradientHoverTestComponentStyleBase","GradientHoverGradientComponentStyleBase","onMouseOver","event","target","parentNode","backgroundimage","setLinearGradient","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref","concat"],"sourceRoot":""}