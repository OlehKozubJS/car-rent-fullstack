{"version":3,"file":"static/js/157.d71a0738.chunk.js","mappings":"qLAEA,MAAMA,EAAaA,KACjB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAS,IAC9BK,EAAQC,IAAaN,EAAAA,EAAAA,WAAS,GAqB/BO,EAAMA,CAACC,EAAGC,MACLD,GAAKC,GAahB,OAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWJ,EAAIT,EAAQG,GACvBW,EAAUL,EAAIT,EAAQa,GACtBE,EAAUN,EAAII,EAAUV,GACxBa,EAAaP,EAAIK,EAASC,GAC1BE,EAAYR,EAAIO,EAAYA,GAElCR,EAAUS,EAAU,GACnB,CAACjB,EAAQG,EAAQE,KAGlBa,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,qBAEHD,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUrB,GAjCfsB,MACnBrB,GAAU,EAAM,IAJEsB,MAClBtB,GAAU,EAAK,GAmC0DkB,SAAA,CAAC,MACjEnB,EAAU,OAAW,YAE5BkB,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUlB,GA9BfqB,MACnBpB,GAAU,EAAM,IAJEqB,MAClBrB,GAAU,EAAK,GAgC0De,SAAA,CAAC,MACjEhB,EAAU,OAAW,YAE5Be,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUhB,GA3BfqB,MACnBpB,GAAU,EAAM,IAJEqB,MAClBrB,GAAU,EAAK,GA6B0Da,SAAA,CAAC,MACjEd,EAAU,OAAW,YAE5BuB,EAAAA,EAAAA,KAAA,KAAAT,SAAKZ,EAAU,OAAW,YACtB,C,+GChDV,MAAMsB,EAAaC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQvBC,EAAYJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sIAGlBG,IAAe,IAAd,KAAEC,GAAMD,EACf,OAAOC,CAAI,IAOTC,EAAsBC,IAA0B,IAAzB,MAAEC,EAAK,SAAEC,GAAUF,EAC9C,MAAOG,EAAaC,IAAkBzC,EAAAA,EAAAA,WAAS,IACxC0C,EAAYC,IAAiB3C,EAAAA,EAAAA,UAASsC,IACtCM,EAAYC,IAAiB7C,EAAAA,EAAAA,UAAS,GA6B7C,OARAU,EAAAA,EAAAA,YAAUoC,EAAAA,EAAAA,IAAoB,aAdNC,IAAkB,IAAjB,QAAEC,GAASD,EAClC,IAAKP,EAAa,CAChB,MAAMS,EAAgBP,EAAaM,EAAUJ,EAEzCK,GAAiB,GAAKA,GAAiB,KACzCN,EAAcM,EAElB,KAO2D,CAACT,KAE9D9B,EAAAA,EAAAA,YAAUoC,EAAAA,EAAAA,IAAoB,WANRI,KACpBT,GAAe,EAAM,IAKkC,CAACD,KAE1D9B,EAAAA,EAAAA,YAAU,KACR6B,EAASG,EAAW,GACnB,CAACA,KAGFhB,EAAAA,EAAAA,KAACC,EAAU,CAAAV,UACTS,EAAAA,EAAAA,KAACM,EAAS,CAACmB,YA7BSC,IAAkB,IAAjB,QAAEJ,GAASI,EAClCX,GAAe,GACfI,EAAcG,EAAQ,EA2BqBb,KAAMO,KACpC,C","sources":["pages/test/LogicGates.jsx","pages/test/SimplestCustomRange.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n        A: {(inputA && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n        B: {(inputB && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n        C: {(inputC && \"true\") || \"false\"}\n      </button>\n      <p>{(output && \"true\") || \"false\"}</p>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [rangeValue, setRangeValue] = useState(value);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (!isDraggable) {\n      const newRangeValue = rangeValue + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        setRangeValue(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  useEffect(() => {\n    onChange(rangeValue);\n  }, [rangeValue]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={rangeValue}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n"],"names":["LogicGates","inputA","setInputA","useState","inputB","setInputB","inputC","setInputC","output","setOutput","nor","a","b","useEffect","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","_jsxs","children","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","_jsx","RangeField","styled","div","_templateObject","_taggedTemplateLiteral","RangeDial","_templateObject2","_ref","left","SimplestCustomRange","_ref2","value","onChange","isDraggable","setIsDraggable","rangeValue","setRangeValue","mouseDownX","setMouseDownX","handleEventListener","_ref4","clientX","newRangeValue","handleMouseUp","onMouseDown","_ref3"],"sourceRoot":""}