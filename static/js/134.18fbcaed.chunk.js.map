{"version":3,"file":"static/js/134.18fbcaed.chunk.js","mappings":"6KAEA,MAAMA,EAAaA,KACjB,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,IAC9BG,EAAQC,IAAaJ,EAAAA,EAAAA,WAAS,IAC9BK,EAAQC,IAAaN,EAAAA,EAAAA,UAAS,IAC9BO,EAAQC,IAAaR,EAAAA,EAAAA,UAAS,IAC9BS,EAAQC,IAAaV,EAAAA,EAAAA,WAAS,GAmC/BW,EAAMA,CAACC,EAAGC,MACLD,GAAKC,GAgChB,OAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWJ,EAAIb,EAAQG,GACvBe,EAAUL,EAAIb,EAAQiB,GACtBE,EAAUN,EAAII,EAAUd,GACxBiB,EAAaP,EAAIK,EAASC,GAC1BE,EAAYR,EAAIO,EAAYA,GAElCR,EAAUS,EAAU,GACnB,CAACrB,EAAQG,EAAQE,KAGlBiB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,qBAEHD,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUzB,GAlEf0B,MACnBzB,GAAU,EAAM,IAJE0B,MAClB1B,GAAU,EAAK,GAoE0DsB,SAAA,CAAC,MACjEvB,EAAU,OAAW,YAE5BsB,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUtB,GA/DfyB,MACnBxB,GAAU,EAAM,IAJEyB,MAClBzB,GAAU,EAAK,GAiE0DmB,SAAA,CAAC,MACjEpB,EAAU,OAAW,YAE5BmB,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAAUpB,GA5DfyB,MACnBxB,GAAU,EAAM,IAJEyB,MAClBzB,GAAU,EAAK,GA8D0DiB,SAAA,CAAC,MACjElB,EAAU,OAAW,YAE5B2B,EAAAA,EAAAA,KAAA,KAAAT,SAAKZ,EAAU,OAAW,WAC1BW,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QA7DLQ,KACnB,MAAMC,EAAY3B,EAAS,EAEzBC,EADgB,IAAd0B,EACQ,EAEAA,EACZ,EAuD8CX,SAAA,CAAC,MACvChB,MAENe,EAAAA,EAAAA,MAAA,UAAQE,KAAK,SAASC,QAxDLU,KAInB,EAoD8CZ,SAAA,CAAC,MACvCd,MAENuB,EAAAA,EAAAA,KAAA,KAAAT,UA5CeT,EA4CDP,EA5CIQ,EA4CIN,EA3CpBK,GAAKC,EACAD,EAEAC,MAyCPiB,EAAAA,EAAAA,KAAA,KAAAT,SAtCaa,EAACtB,EAAGC,IACfD,GAAKC,EACAD,EAEAC,EAkCHqB,CAAS7B,EAAQE,QA7CP4B,IAACvB,EAAGC,CA8Cd,C","sources":["pages/test/LogicGates.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(0);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n    } else {\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n        A: {(inputA && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n        B: {(inputB && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n        C: {(inputC && \"true\") || \"false\"}\n      </button>\n      <p>{(output && \"true\") || \"false\"}</p>\n      <button type=\"button\" onClick={handleValueD}>\n        D: {inputD}\n      </button>\n      <button type=\"button\" onClick={handleValueE}>\n        E: {inputE}\n      </button>\n      <p>{ternarAND(inputD, inputE)}</p>\n      <p>{ternarOR(inputD, inputE)}</p>\n    </div>\n  );\n};\n\nexport { LogicGates };\n"],"names":["LogicGates","inputA","setInputA","useState","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","useEffect","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","_jsxs","children","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","_jsx","handleValueD","newValueD","handleValueE","ternarOR","ternarAND"],"sourceRoot":""}