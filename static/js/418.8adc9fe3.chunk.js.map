{"version":3,"file":"static/js/418.8adc9fe3.chunk.js","mappings":"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","sources":["pages/TestPages/TestPageOne.jsx","pages/TestPages/TestPageTwo.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx"],"sourcesContent":["import { Routes, Route, Outlet, NavLink } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink></NavLink>\n        </li>\n        <li>\n          <NavLink></NavLink>\n        </li>\n        <li>\n          <NavLink></NavLink>\n        </li>\n      </ul>\n      <Routes>\n        <Route path=\"/\" element={<Outlet />}>\n          <Route\n            path=\"tests\"\n            element={\n              <div>\n                <CarFilterTest />\n                <DateAndTimeTest />\n                <FibonacciTest />\n                <FontsAndSVGimagesTest />\n                <PrimeNumbersTest />\n                <SquaresTest />\n              </div>\n            }\n          />\n          <Route path=\"moir\" element={<div>Moir</div>} />\n          <Route path=\"stars\" element={<StarsEffectTest />} />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n\nexport default TestPageOne;\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst TestPageTwo = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport default TestPageTwo;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n"],"names":["TestPageOne","_jsxs","children","_jsx","NavLink","Routes","Route","path","element","Outlet","CarFilterTest","DateAndTimeTest","FibonacciTest","FontsAndSVGimagesTest","PrimeNumbersTest","SquaresTest","StarsEffectTest","CheapTrick","styled","section","_templateObject","_taggedTemplateLiteral","JustAnotherDiv","div","_templateObject2","_ref","top","_ref2","left","_ref3","size","_ref4","TestPageTwo","sizeValue","setSizeValue","useState","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","Math","floor","random","setWhiteSpotCoordinates","setWhiteSpotSize","useEffect","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","style","fontFamily","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","width","time","setTime","date","setDate","Date","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","backgroundColor","SVGimage","name","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","squares","setSquares","getSquare","pow"],"sourceRoot":""}