{"version":3,"file":"static/js/808.cdeb0608.chunk.js","mappings":"mNAIA,MAAMA,EAA0BC,IAAwC,IAAvC,SAAEC,EAAQ,MAAEC,EAAK,MAAEC,EAAK,MAAEC,GAAOJ,EAShE,OACEK,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,WAAYC,OAAQ,QAASC,UACnDJ,EAAAA,EAAAA,KAACK,EAAAA,mBAAkB,CACjBT,SAXcU,IACXC,IAAiB,IAAhB,OAAEC,GAAQD,EACZC,GAAU,GAAKA,GAAUV,GAC3BF,EAASY,EACX,EAQEA,OAAQX,EACRY,OAAQ,EACRN,OAAQ,GACRO,MAAO,GACPC,gBAAiBZ,KAEf,C,sGCjBV,MAAMM,EAAqBV,IAOpB,IAPqB,SAC1BC,EAAQ,OACRa,EAAM,OACND,EAAM,OACNL,EAAM,MACNO,EAAK,gBACLC,GACDhB,EACC,MAAOiB,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,IACxCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAASL,IACtCQ,EAAYC,IAAiBJ,EAAAA,EAAAA,UAASN,GAwB7C,OAHAW,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,IAAoB,aAbNC,IAA2B,IAA1B,QAAEC,EAAO,QAAEC,GAASF,EACvCT,GACFhB,EAAS,CACPa,OAAQA,EAASa,EAAUP,EAC3BP,OAAQA,EAASe,EAAUN,GAE/B,IAO2D,CAACL,KAC9DO,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,IAAoB,WALRI,KACpBX,GAAe,EAAM,IAIkC,CAACD,KAGxDZ,EAAAA,EAAAA,KAACyB,EAAAA,wBAAuB,CACtBC,YAxBoBnB,IAA2B,IAA1B,QAAEe,EAAO,QAAEC,GAAShB,EAC3CM,GAAe,GACfG,EAAcM,GACdJ,EAAcK,EAAQ,EAsBpBI,IAAKlB,EACLmB,KAAMpB,EACNL,OAAQA,EACRO,MAAOA,EACPC,gBAAiBA,GACQ,C,iGC5C/B,MAAMkB,EAA0BA,KAC9B,MAAOpB,EAAQqB,IAAahB,EAAAA,EAAAA,UAAS,MAC9BN,EAAQuB,IAAajB,EAAAA,EAAAA,UAAS,GAWrC,OACEkB,EAAAA,EAAAA,MAAA,WAAA5B,SAAA,EACEJ,EAAAA,EAAAA,KAACK,EAAAA,mBAAkB,CACjBI,OAAQA,EACRD,OAAQA,EACRZ,SAdgBD,IAAyB,IAAxB,OAAEc,EAAM,OAAED,GAAQb,EACnCc,GAAU,KACZqB,EAAUrB,GAERD,GAAU,GACZuB,EAAUvB,EACZ,KAUEwB,EAAAA,EAAAA,MAAA,KAAA5B,SAAA,CAAG,UAAQK,MACXuB,EAAAA,EAAAA,MAAA,KAAA5B,SAAA,CAAG,UAAQI,OACH,C,8ECxBd,MAAMiB,E,QAA0BQ,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uIAGjCzC,IAAc,IAAb,IAAEgC,GAAKhC,EACb,OAAOgC,CAAG,IAGJpB,IAAe,IAAd,KAAEqB,GAAMrB,EACf,OAAOqB,CAAI,IAGHP,IAAiB,IAAhB,OAAElB,GAAQkB,EACnB,OAAOlB,CAAM,IAGNkC,IAAgB,IAAf,MAAE3B,GAAO2B,EACjB,OAAO3B,CAAK,IAGM4B,IAA0B,IAAzB,gBAAE3B,GAAiB2B,EACtC,OAAO3B,CAAe,G","sources":["pages/test/AnimationTest/AnimationTestController.jsx","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTestController = ({ onChange, value, range, color }) => {\n  const handleValue = () => {\n    return ({ valueX }) => {\n      if (valueX >= 0 && valueX <= range) {\n        onChange(valueX);\n      }\n    };\n  };\n\n  return (\n    <div style={{ position: \"relative\", height: \"50px\" }}>\n      <DraggableComponent\n        onChange={handleValue}\n        valueX={value}\n        valueY={0}\n        height={50}\n        width={50}\n        backgroundColor={color}\n      />\n    </div>\n  );\n};\n\nexport { AnimationTestController };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n"],"names":["AnimationTestController","_ref","onChange","value","range","color","_jsx","style","position","height","children","DraggableComponent","handleValue","_ref2","valueX","valueY","width","backgroundColor","isDraggable","setIsDraggable","useState","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientY","clientX","handleMouseUp","DraggableComponentStyle","onMouseDown","top","left","DraggableComponentField","setValueY","setValueX","_jsxs","styled","div","_templateObject","_taggedTemplateLiteral","_ref4","_ref5"],"sourceRoot":""}