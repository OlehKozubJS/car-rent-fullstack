{"version":3,"file":"static/js/411.e2b13fdf.chunk.js","mappings":"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","sources":["pages/TestPage.jsx","pages/test/DraggableComponent.jsx","pages/test/LogicGates.jsx","pages/test/PageChooser.jsx","pages/test/SimplestCustomRange.jsx","pages/test/SimplestCustomRangeStyle.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport {\n  LogicGates,\n  SimplestCustomRange,\n  PageChooser,\n  DraggableComponent,\n} from \"./test\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n  const [rangeValue, setRangeValue] = useState(0);\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <PageChooser\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n        ]}\n        currentComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && (\n        <SimplestCustomRange onChange={handleRangeValue} value={rangeValue} />\n      )}\n      {componentName === \"Draggable component\" && (\n        <DraggableComponent\n          valueY={valueY}\n          valueX={valueX}\n          onChange={handleXYvalue}\n        />\n      )}\n      <p>{rangeValue}</p>\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport default TestPage;\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { DraggableComponentStyle } from \"./SimplestCustomRangeStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","const PageChooser = ({ componentNames, currentComponentName, onChange }) => {\n  const chooseComponent = ({ target }) => {\n    onChange(target.value);\n  };\n\n  return (\n    <nav>\n      <ul>\n        {componentNames.map((value) => {\n          return (\n            <li key={value}>\n              <label htmlFor={value}>\n                <input\n                  id={value}\n                  name=\"chooseComponentRadio\"\n                  type=\"radio\"\n                  value={value}\n                  onChange={chooseComponent}\n                  checked={currentComponentName === value}\n                />\n                <span>{value}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageChooser };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport { RangeField, RangeDial } from \"./SimplestCustomRangeStyle\";\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial, DraggableComponentStyle };\n"],"names":["TestPage","componentName","setComponentName","useState","rangeValue","setRangeValue","valueY","setValueY","valueX","setValueX","_jsxs","children","_jsx","PageChooser","componentNames","currentComponentName","onChange","newComponentName","LogicGates","SimplestCustomRange","newRangeValue","value","DraggableComponent","_ref","isDraggable","setIsDraggable","mouseDownY","setMouseDownY","mouseDownX","setMouseDownX","handleMouseDown","_ref2","clientY","clientX","useEffect","handleEventListener","_ref3","handleMouseUp","DraggableComponentStyle","onMouseDown","top","left","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","chooseComponent","target","map","htmlFor","id","name","checked","RangeField","RangeDial","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3"],"sourceRoot":""}