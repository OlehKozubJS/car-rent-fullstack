{"version":3,"file":"static/js/788.6b351964.chunk.js","mappings":"gNAMA,MAAMA,EAAoBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gCAI9BC,EAAWA,KACf,MAAOC,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,MACxBC,EAAMC,IAAWF,EAAAA,EAAAA,UAAS,MAC1BG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,GAqDnC,OAnDAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAaC,IACE,YAAfA,EAAMC,MAAoC,MAAdD,EAAME,KACpCV,EAAOD,EAAM,GAEI,YAAfS,EAAMC,MAAoC,MAAdD,EAAME,KACpCV,EAAOD,EAAM,EACf,EAKF,OAFAY,OAAOC,iBAAiB,UAAWL,GAE5B,KACLI,OAAOE,oBAAoB,UAAWN,EAAU,CACjD,GACA,CAACR,KAEJO,EAAAA,EAAAA,YAAU,KACR,MAAMQ,EAAcN,IACC,YAAfA,EAAMC,MAAoC,MAAdD,EAAME,KACpCP,EAAQD,EAAO,GAEE,YAAfM,EAAMC,MAAoC,MAAdD,EAAME,KACpCP,EAAQD,EAAO,EACjB,EAKF,OAFAS,OAAOC,iBAAiB,UAAWE,GAE5B,KACLH,OAAOE,oBAAoB,UAAWC,EAAW,CAClD,GACA,CAACZ,KAEJI,EAAAA,EAAAA,YAAU,KACR,MAAMS,EAAeP,IACA,YAAfA,EAAMC,MAAoC,MAAdD,EAAME,KACpCL,EAASD,EAAQ,GAEA,YAAfI,EAAMC,MAAoC,MAAdD,EAAME,KACpCL,EAASD,EAAQ,EACnB,EAKF,OAFAO,OAAOC,iBAAiB,UAAWG,GAE5B,KACLJ,OAAOE,oBAAoB,UAAWE,EAAY,CACnD,GACA,CAACX,KAGFY,EAAAA,EAAAA,MAACvB,EAAiB,CAAAwB,SAAA,EAChBC,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CACZpB,IAAKA,EACLG,KAAMA,EACNE,MAAOA,EACPgB,OAAQ,IACRC,MAAO,OAETH,EAAAA,EAAAA,KAACC,EAAAA,cAAa,CAACpB,IAAK,IAAKG,KAAM,IAAKE,MAAO,GAAIgB,OAAQ,IAAKC,MAAO,QACjD,C,oGCxExB,MAAMC,EAAkB5B,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oMAGzB0B,IAAc,IAAb,IAAExB,GAAKwB,EACb,OAAOxB,CAAG,IAGJyB,IAAe,IAAd,KAAEtB,GAAMsB,EACf,OAAOtB,CAAI,IAITuB,IAAgB,IAAf,MAAErB,GAAOqB,EACV,OAAOrB,CAAK,IAINsB,IAAiB,IAAhB,OAAEN,GAAQM,EACnB,OAAON,CAAM,IAGNO,IAAgB,IAAf,MAAEN,GAAOM,EACjB,OAAON,CAAK,IAOVO,EAAkBlC,EAAAA,EAAOC,IAAGkC,IAAAA,GAAAhC,EAAAA,EAAAA,GAAA,+DAGlBiC,IAAgB,IAAf,MAAEC,GAAOD,EACtB,OAAOC,CAAK,IAIVZ,EAAgBa,IAA0C,IAAzC,OAAEZ,EAAM,MAAEC,EAAK,IAAEtB,EAAG,KAAEG,EAAI,MAAEE,GAAO4B,EACxD,MAAOC,EAASC,IAAcjC,EAAAA,EAAAA,UAAS,IAgBvC,OAdAK,EAAAA,EAAAA,YAAU,KACJ2B,EAAQE,QAAUf,EAAS,GAI/Bc,EAAW,IACND,GACHf,EAAAA,EAAAA,KAACU,EAAe,CAEdG,MAAOE,EAAQE,OAAS,IAAM,EAAI,uBAAyB,QADtDF,EAAQE,OAAS,IAGxB,GACD,CAACF,KAGFf,EAAAA,EAAAA,KAACI,EAAe,CACdvB,IAAKA,EACLG,KAAMA,EACNE,MAAOA,EACPgB,OAAQA,EACRC,MAAOA,EAAMJ,SAEZgB,GACe,C","sources":["pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  postion: relative;\n`;\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(200);\n  const [left, setLeft] = useState(200);\n  const [angle, setAngle] = useState(0);\n\n  useEffect(() => {\n    const changeTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"s\") {\n        setTop(top + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeTop);\n    };\n  }, [top]);\n\n  useEffect(() => {\n    const changeLeft = (event) => {\n      if (event.type === \"keydown\" && event.key === \"a\") {\n        setLeft(left - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"d\") {\n        setLeft(left + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeLeft);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeLeft);\n    };\n  }, [left]);\n\n  useEffect(() => {\n    const changeAngle = (event) => {\n      if (event.type === \"keydown\" && event.key === \"q\") {\n        setAngle(angle - 5);\n      }\n      if (event.type === \"keydown\" && event.key === \"e\") {\n        setAngle(angle + 5);\n      }\n    };\n\n    window.addEventListener(\"keydown\", changeAngle);\n\n    return () => {\n      window.removeEventListener(\"keydown\", changeAngle);\n    };\n  }, [angle]);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare\n        top={top}\n        left={left}\n        angle={angle}\n        height={300}\n        width={300}\n      />\n      <StripedSquare top={300} left={300} angle={90} height={100} width={500} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  transform: rotate(\n    ${({ angle }) => {\n      return angle;\n    }}deg\n  );\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 5px;\n  width: 250px;\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ height, width, top, left, angle }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= height / 5) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase\n      top={top}\n      left={left}\n      angle={angle}\n      height={height}\n      width={width}\n    >\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n"],"names":["MoirTestStyleBase","styled","div","_templateObject","_taggedTemplateLiteral","MoirTest","top","setTop","useState","left","setLeft","angle","setAngle","useEffect","changeTop","event","type","key","window","addEventListener","removeEventListener","changeLeft","changeAngle","_jsxs","children","_jsx","StripedSquare","height","width","SquareStyleBase","_ref","_ref2","_ref3","_ref4","_ref5","StripeStyleBase","_templateObject2","_ref6","color","_ref7","stripes","setStripes","length"],"sourceRoot":""}