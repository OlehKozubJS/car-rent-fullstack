{"version":3,"file":"static/js/812.3b5dc3bc.chunk.js","mappings":"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","sources":["pages/FavouriteCarsPage.jsx","pages/MainPage.jsx","pages/TestPages/TestPageOne.jsx","pages/TestPages/TestPageTwo.jsx","pages/TestPages/testComponents/CarFilterTest/CarFilterTest.jsx","pages/TestPages/testComponents/DateAndTimeTest/DateAndTimeTest.jsx","pages/TestPages/testComponents/FibonacciTest/FibonacciTest.jsx","pages/TestPages/testComponents/FontsAndSVGimagesTest/FontsAndSVGimagesTest.jsx","pages/TestPages/testComponents/MoirTest/MoirTest.jsx","pages/TestPages/testComponents/MoirTest/StripedSquare.jsx","pages/TestPages/testComponents/PageNavigationTest/PageNavigationTest.jsx","pages/TestPages/testComponents/PrimeNumbersTest/PrimeNumbersTest.jsx","pages/TestPages/testComponents/SquaresTest/SquaresTest.jsx","pages/TestPages/testComponents/StarsEffectTest/StarsEffectTest.jsx","pages/TestPages/testComponents/TestPageLayout/TestPageLayout.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst FavouriteCarsPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default FavouriteCarsPage;\n","import { useState, useEffect } from \"react\";\n\nimport { CarFilter, CarGallery, CarModal } from \"./imports\";\n\nconst MainPage = ({ cars, onFavouriteClick }) => {\n  const [isModal, setIsModal] = useState(false);\n  const [car, setCar] = useState(null);\n\n  const openModal = (newCar) => {\n    setCar(newCar);\n    setIsModal(true);\n  };\n\n  const closeModal = () => {\n    setIsModal(false);\n  };\n\n  return (\n    <section>\n      {isModal && <CarModal car={car} onClose={closeModal} />}\n      <CarFilter />\n      <CarGallery\n        cars={cars}\n        onLearnMoreClick={openModal}\n        onFavouriteClick={onFavouriteClick}\n      />\n    </section>\n  );\n};\n\nexport default MainPage;\n","import { Routes, Route } from \"react-router-dom\";\n\nimport {\n  CarFilterTest,\n  DateAndTimeTest,\n  FibonacciTest,\n  FontsAndSVGimagesTest,\n  PrimeNumbersTest,\n  StarsEffectTest,\n  SquaresTest,\n  TestPageLayout,\n  MoirTest,\n} from \"./testComponents\";\n\nconst TestPageOne = () => {\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  return (\n    <Routes>\n      <Route path=\"/\" element={<TestPageLayout />}>\n        <Route\n          path=\"tests\"\n          element={\n            <div>\n              <CarFilterTest />\n              <DateAndTimeTest />\n              <FibonacciTest />\n              <FontsAndSVGimagesTest />\n              <PrimeNumbersTest />\n              <SquaresTest />\n            </div>\n          }\n        />\n        <Route path=\"stars\" element={<StarsEffectTest />} />\n        <Route path=\"moir\" element={<MoirTest />} />\n      </Route>\n    </Routes>\n  );\n};\n\nexport default TestPageOne;\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst TestPageTwo = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport default TestPageTwo;\n","const CarFilterTest = () => {\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport { CarFilterTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst DateAndTimeTest = () => {\n  const [time, setTime] = useState(0);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  return (\n    <div>\n      {String(date)}\n      <p>{time}</p>\n    </div>\n  );\n};\n\nexport { DateAndTimeTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleTimeOut } from \"./imports\";\n\nconst FibonacciTest = () => {\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  return <p>{fibonacciArray.join(\", \")}</p>;\n};\n\nexport { FibonacciTest };\n","import { SVGimage } from \"./imports\";\n\nconst FontsAndSVGimagesTest = () => {\n  return (\n    <div>\n      <span style={{ fontFamily: \"manrope-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"manrope-medium\" }}>Medium</span>\n      <span style={{ fontFamily: \"manrope-semibold\" }}>Semibold</span>\n      <span style={{ fontFamily: \"montserrat-regular\" }}>Regular</span>\n      <span style={{ fontFamily: \"montserrat-semibold\" }}>Semibold</span>\n      <div style={{ backgroundColor: \"black\" }}>\n        <SVGimage name=\"fav\" />\n      </div>\n    </div>\n  );\n};\n\nexport { FontsAndSVGimagesTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nimport { StripedSquare } from \"./StripedSquare\";\n\nconst MoirTestStyleBase = styled.div`\n  postion: relative;\n`;\n\nconst MoirTest = () => {\n  const [top, setTop] = useState(200);\n  const [left, setLeft] = useState(200);\n\n  useEffect(() => {\n    const increaseTop = (event) => {\n      if (event.type === \"keydown\" && event.key === \"w\") {\n        setTop(top - 10);\n      }\n    };\n\n    window.addEventListener(\"keydown\", increaseTop);\n\n    return () => {\n      window.removeEventListener(\"keydown\", increaseTop);\n    };\n  }, []);\n\n  useEffect(() => {}, []);\n\n  return (\n    <MoirTestStyleBase>\n      <StripedSquare top={top} left={left} />\n      <StripedSquare top={300} left={300} />\n    </MoirTestStyleBase>\n  );\n};\n\nexport { MoirTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst SquareStyleBase = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: 250px;\n  width: 250px;\n\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StripeStyleBase = styled.div`\n  height: 10px;\n  width: 250px;\n  background: ${({ color }) => {\n    return color;\n  }};\n`;\n\nconst StripedSquare = ({ top, left }) => {\n  const [stripes, setStripes] = useState([]);\n\n  useEffect(() => {\n    if (stripes.length >= 25) {\n      return;\n    }\n\n    setStripes([\n      ...stripes,\n      <StripeStyleBase\n        key={stripes.length + 1}\n        color={stripes.length % 2 === 0 ? \"rgba(0, 0, 250, 0.5)\" : \"none\"}\n      ></StripeStyleBase>,\n    ]);\n  }, [stripes]);\n\n  return (\n    <SquareStyleBase top={top} left={left}>\n      {stripes}\n    </SquareStyleBase>\n  );\n};\n\nexport { StripedSquare };\n","const PageNavigationTest = ({ pages, onChange, currentPageName }) => {\n  const handleCurrentPage = (event) => {\n    onChange(pages.find(({ name }) => event.target.value === name));\n  };\n\n  return (\n    <nav>\n      <ul>\n        {pages.map(({ name }) => {\n          return (\n            <li key={name}>\n              <label htmlFor={name}>\n                <input\n                  id={name}\n                  name=\"pageSwitcher\"\n                  type=\"radio\"\n                  onChange={handleCurrentPage}\n                  value={name}\n                  checked={currentPageName === name}\n                />\n                <span>{name}</span>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport { PageNavigationTest };\n","import { useState, useEffect } from \"react\";\n\nimport { handleInterval } from \"./imports\";\n\nconst PrimeNumbersTest = () => {\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  return <p>{primeNumbersArray.join(\", \")}</p>;\n};\n\nexport { PrimeNumbersTest };\n","import { useState, useEffect } from \"react\";\n\nconst SquaresTest = () => {\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  return <p>{squares.join(\", \")}</p>;\n};\n\nexport { SquaresTest };\n","import { useState, useEffect } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst CheapTrick = styled.section`\n  height: 500px;\n  background-color: black;\n  position: relative;\n`;\n\nconst JustAnotherDiv = styled.div`\n  position: absolute;\n  top: ${({ top = 0 }) => {\n    return top;\n  }}px;\n  left: ${({ left = 0 }) => {\n    return left;\n  }}px;\n  width: ${({ size = 0 }) => {\n    return size;\n  }}px;\n  height: ${({ size = 0 }) => {\n    return size;\n  }}px;\n\n  border-radius: 50%;\n  background-image: radial-gradient(at center, white, white, black);\n`;\n\nconst StarsEffectTest = () => {\n  const [sizeValue, setSizeValue] = useState(0);\n  const [middleSizeValue, setMiddleSizeValue] = useState(0);\n  const [topValue, setTopValue] = useState(0);\n  const [leftValue, setLeftValue] = useState(0);\n\n  const getRandomNumber = (maximalNumber) => {\n    return Math.floor(Math.random() * maximalNumber);\n  };\n\n  const setWhiteSpotCoordinates = () => {\n    setTopValue(getRandomNumber(500));\n    setLeftValue(getRandomNumber(1000));\n    setSizeValue(getRandomNumber(100));\n  };\n\n  const setWhiteSpotSize = () => {\n    if (middleSizeValue >= sizeValue) {\n      setMiddleSizeValue(0);\n    } else {\n      setMiddleSizeValue(middleSizeValue + 1);\n    }\n  };\n\n  useEffect(() => {\n    const setWhiteSpotCoordinatesAnimation = setTimeout(\n      setWhiteSpotCoordinates,\n      1000\n    );\n\n    return () => {\n      clearTimeout(setWhiteSpotCoordinatesAnimation);\n    };\n  }, [sizeValue]);\n\n  useEffect(() => {\n    const setWhiteSpotSizeAnimation = setTimeout(setWhiteSpotSize, 50);\n\n    return () => {\n      clearTimeout(setWhiteSpotSizeAnimation);\n    };\n  }, [sizeValue, middleSizeValue]);\n\n  //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n\n  return (\n    <div style={{ fontFamily: \"Montserrat-Regular\" }}>\n      <CheapTrick>\n        <JustAnotherDiv\n          top={topValue}\n          left={leftValue}\n          size={middleSizeValue}\n        ></JustAnotherDiv>\n      </CheapTrick>\n    </div>\n  );\n};\n\nexport { StarsEffectTest };\n","import { Outlet, NavLink } from \"react-router-dom\";\n\nconst TestPageLayout = () => {\n  return (\n    <div>\n      <ul>\n        <li>\n          <NavLink to=\"tests\">Various tests</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"stars\">Stars effect test</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"moir\">Moir test</NavLink>\n        </li>\n      </ul>\n      <div>\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport { TestPageLayout };\n"],"names":["_ref","cars","onFavouriteClick","isModal","setIsModal","useState","car","setCar","_jsxs","children","_jsx","CarModal","onClose","closeModal","CarGallery","onLearnMoreClick","newCar","CarFilter","TestPageOne","Routes","Route","path","element","TestPageLayout","CarFilterTest","DateAndTimeTest","FibonacciTest","FontsAndSVGimagesTest","PrimeNumbersTest","SquaresTest","StarsEffectTest","MoirTest","CheapTrick","styled","section","_templateObject","_taggedTemplateLiteral","JustAnotherDiv","div","_templateObject2","top","_ref2","left","_ref3","size","_ref4","TestPageTwo","sizeValue","setSizeValue","middleSizeValue","setMiddleSizeValue","topValue","setTopValue","leftValue","setLeftValue","getRandomNumber","maximalNumber","Math","floor","random","setWhiteSpotCoordinates","setWhiteSpotSize","useEffect","setWhiteSpotCoordinatesAnimation","setTimeout","clearTimeout","setWhiteSpotSizeAnimation","style","fontFamily","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","width","time","setTime","date","setDate","Date","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","String","fibonacciArray","setFibonacciArray","handleTimeOut","fibonacciTimeFunction","length","join","backgroundColor","SVGimage","name","MoirTestStyleBase","setTop","setLeft","increaseTop","key","window","addEventListener","removeEventListener","StripedSquare","SquareStyleBase","StripeStyleBase","color","stripes","setStripes","PageNavigationTest","pages","currentPageName","handleCurrentPage","find","map","checked","primeNumbersArray","setPrimeNumbersArray","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","squares","setSquares","getSquare","pow","NavLink","to","Outlet"],"sourceRoot":""}