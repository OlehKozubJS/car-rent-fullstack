{"version":3,"file":"static/js/157.15718e2a.chunk.js","mappings":"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","sources":["pages/test/CellularAutomaton/Cells.jsx","pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js","pages/test/CellularAutomatonLite/Cells.jsx","pages/test/CellularAutomatonLite/CellularAutomatonLite.jsx","pages/test/CellularAutomatonLite/CellularAutomatonLiteStyle.js","pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverField.jsx","pages/test/GradientHover/GradientHoverFieldStyle.js","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx","pages/test/index.js"],"sourcesContent":["import { CellStyleBase } from \"./CellularAutomatonStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomaton = () => {\n  const [cellsData, setCellsData] = useState(createCellsDataArray());\n\n  const changeCellData = ({ target }) => {\n    setCellsData(\n      cellsData.map((cellData, cellNumber) => {\n        if (Number(target.dataset.number) === cellNumber) {\n          return !cellData;\n        } else {\n          return cellData;\n        }\n      })\n    );\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={changeCellData}>\n      {cellsData.map((cellData, cellNumber) => {\n        return (\n          <CellStyleBase\n            key={cellNumber}\n            data-number={cellNumber}\n            isActive={cellData}\n          ></CellStyleBase>\n        );\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return isActive ? \"rgb(0, 0, 0)\" : \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n  color: ${({ isActive }) => {\n    return isActive ? \"rgb(255, 255, 255)\" : \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { CellStyleBase } from \"./CellularAutomatonLiteStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonLiteStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomatonLite = () => {\n  const [cellsData, setCellsData] = useState([]);\n\n  const addCellData = ({ clientY, clientX, target }) => {\n    const y = clientY - target.getBoundingClientRect().top;\n    const x = clientX - target.getBoundingClientRect().left;\n\n    setCellsData([\n      ...cellsData,\n\n      <CellStyleBase\n        key={`${y}, ${x}`}\n        top={y}\n        left={clientX}\n        isActive={true}\n      ></CellStyleBase>,\n    ]);\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={addCellData}>\n      {cellsData.map((cell) => {\n        return cell;\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomatonLite };\n/*\n\n      {cellsData.map((cellData, cellNumber) => {\n        return (\n\n        );\n      })}\n\n*/\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n\n  position: relative;\n`;\n\nconst CellStyleBase = styled.div`\n  position: absolute;\n\n  height: 10px;\n  width: 10px;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return (isActive && \"rgb(0, 0, 0)\") || \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n\n  color: ${({ isActive }) => {\n    return (isActive && \"rgb(255, 255, 255)\") || \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase\n            key={value}\n            htmlFor={value}\n            isactive={(componentName === value).toString()}\n          >\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n\n  margin-bottom: 10px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  height: 24px;\n\n  display: flex;\n  padding-inline: 24px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(112, 52, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(68, 11, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.span`\n  display: inline;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradientHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n      setGradientLeft(-40);\n      setIsGradientAnimation(false);\n    } else {\n      setGradientLeft(gradientLeft + 5);\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <GradientHoverStyleBase\n      onMouseOver={handleMouseOver}\n      backgroundimage={setLinearGradient(gradientLeft)}\n    ></GradientHoverStyleBase>\n  );\n};\n\nexport { GradientHover };\n","import { GradientHover } from \"./GradientHover\";\n\nimport { GradientHoverFieldStyleBase } from \"./GradientHoverFieldStyle\";\n\nconst GradientHoverField = () => {\n  return (\n    <div>\n      <GradientHoverFieldStyleBase>\n        Gradient hover\n        <GradientHover />\n      </GradientHoverFieldStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHoverField };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverFieldStyleBase = styled.div`\n  height: 150px;\n  width: 800px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nexport { GradientHoverFieldStyleBase };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\nimport { GradientHoverField } from \"./GradientHover\";\nimport { CellularAutomaton } from \"./CellularAutomaton\";\nimport { CellularAutomatonLite } from \"./CellularAutomatonLite\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Cellular automaton lite\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n          \"Gradient hover\",\n          \"Cellular automaton\",\n          \"Cellular automaton lite\",\n        ]}\n        initialComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n      {componentName === \"Gradient hover\" && <GradientHoverField />}\n      {componentName === \"Cellular automaton\" && <CellularAutomaton />}\n      {componentName === \"Cellular automaton lite\" && <CellularAutomatonLite />}\n    </section>\n  );\n};\n\nexport { TestPage };\n","import { TestPage } from \"./TestPage\";\n\nexport default TestPage;\n"],"names":["Cells","cells","cellNumber","_jsx","CellStyleBase","isActive","CellularAutomaton","cellsData","setCellsData","useState","createCellsDataArray","CellularFieldStyleBase","onClick","_ref","target","map","cellData","Number","dataset","number","children","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","CellularAutomatonLite","clientY","clientX","y","getBoundingClientRect","top","x","left","concat","cell","_ref3","_ref4","ComponentSelector","componentNames","initialComponentName","onChange","componentName","setComponentName","chooseComponent","event","newComponentName","value","ComponentSelectorContainerStyleBase","_jsxs","ComponentSelectorButtonStyleBase","htmlFor","isactive","toString","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","nav","label","input","_templateObject3","span","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","CustomRangeField","rangeValue","setRangeValue","DraggableComponent","valueY","valueX","mouseDownY","setMouseDownY","handleMouseDown","DraggableComponentStyle","DraggableComponentField","setValueY","setValueX","GradientHover","isGradientAnimation","setIsGradientAnimation","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","animation","setInterval","clearInterval","GradientHoverStyleBase","onMouseOver","parentNode","backgroundimage","setLinearGradient","GradientHoverField","GradientHoverFieldStyleBase","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","RecursionFunctionTest","recursionFunction2","TestPage"],"sourceRoot":""}