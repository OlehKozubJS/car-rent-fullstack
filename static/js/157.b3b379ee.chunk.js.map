{"version":3,"file":"static/js/157.b3b379ee.chunk.js","mappings":"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","sources":["pages/test/AnimationTest/AnimationTest.jsx","pages/test/AnimationTest/AnimationTestController.jsx","pages/test/CellularAutomaton/Cells.jsx","pages/test/CellularAutomaton/CellularAutomaton.jsx","pages/test/CellularAutomaton/CellularAutomatonStyle.js","pages/test/CellularAutomatonLite/CellularAutomatonLite.jsx","pages/test/CellularAutomatonLite/CellularAutomatonLiteStyle.js","pages/test/ComponentSelector/ComponentSelector.jsx","pages/test/ComponentSelector/ComponentSelectorStyle.js","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/GradientHover/GradientHover.jsx","pages/test/GradientHover/GradientHoverField.jsx","pages/test/GradientHover/GradientHoverFieldStyle.js","pages/test/GradientHover/GradientHoverStyle.js","pages/test/GradientHover/setLinearGradient.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx","pages/test/index.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport { AnimationTestController } from \"./AnimationTestController\";\n\nconst handleValue = (valueSetter) => {\n  return ({ valueX }) => {\n    if (valueX >= 0 && valueX <= 180) {\n      valueSetter(valueX);\n    }\n  };\n};\n\nconst AnimationTest = () => {\n  const [transformRotateValue, setTransformRotateValue] = useState(0);\n  const [transformRotateYvalue, setTransformRotateYvalue] = useState(0);\n  const [transformRotateXvalue, setTransformRotateXvalue] = useState(0);\n  const [perspectiveValue, setPerspectiveValue] = useState(0);\n\n  const handleTransformRotateValue = handleValue(setTransformRotateValue);\n  const handleTransformRotateYvalue = handleValue(setTransformRotateYvalue);\n  const handleTransformRotateXvalue = handleValue(setTransformRotateXvalue);\n  const handlePerspectiveValue = handleValue(setPerspectiveValue);\n\n  return (\n    <div>\n      <AnimationTestController\n        onChange={handleTransformRotateValue}\n        value={transformRotateValue}\n        color={\"red\"}\n      />\n      <AnimationTestController\n        onChange={handleTransformRotateYvalue}\n        value={transformRotateYvalue}\n        color={\"green\"}\n      />\n      <AnimationTestController\n        onChange={handleTransformRotateXvalue}\n        value={transformRotateXvalue}\n        color={\"blue\"}\n      />\n      <AnimationTestController\n        onChange={handlePerspectiveValue}\n        value={perspectiveValue}\n        color={\"cyan\"}\n      />\n      <p>transform: rotate: {transformRotateValue}</p>\n      <p>transfrom: rotateY: {transformRotateYvalue}</p>\n      <p>transform: rotateX: {transformRotateXvalue}</p>\n      <p>transform: perspective: {perspectiveValue}</p>\n      <div>\n        <div\n          style={{\n            height: \"250px\",\n            width: \"250px\",\n            borderColor: \"magenta\",\n            borderWidth: \"5px\",\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport { AnimationTest };\n","import { useState } from \"react\";\n\nimport { DraggableComponent } from \"../DraggableComponent\";\n\nconst AnimationTestController = ({ onChange, value, color }) => {\n  return (\n    <div style={{ position: \"relative\", height: \"25px\" }}>\n      <DraggableComponent\n        onChange={onChange}\n        valueX={value}\n        valueY={0}\n        height={25}\n        width={50}\n        backgroundColor={color}\n      />\n    </div>\n  );\n};\n\nexport { AnimationTestController };\n","import { CellStyleBase } from \"./CellularAutomatonStyle\";\n\nconst Cells = () => {\n  let cells = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cells = [\n      ...cells,\n      <CellStyleBase key={cellNumber} isActive={false}></CellStyleBase>,\n    ];\n  }\n\n  return cells;\n};\n\nexport { Cells };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonStyle\";\n\nimport { Cells } from \"./Cells\";\n\nconst createCellsDataArray = () => {\n  let cellsData = [];\n\n  for (let cellNumber = 1; cellNumber <= 2500; cellNumber += 1) {\n    cellsData = [...cellsData, false];\n  }\n\n  return cellsData;\n};\n\nconst CellularAutomaton = () => {\n  const [cellsData, setCellsData] = useState(createCellsDataArray());\n\n  const changeCellData = ({ target }) => {\n    setCellsData(\n      cellsData.map((cellData, cellNumber) => {\n        if (Number(target.dataset.number) === cellNumber) {\n          return !cellData;\n        } else {\n          return cellData;\n        }\n      })\n    );\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={changeCellData}>\n      {cellsData.map((cellData, cellNumber) => {\n        return (\n          <CellStyleBase\n            key={cellNumber}\n            data-number={cellNumber}\n            isActive={cellData}\n          ></CellStyleBase>\n        );\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomaton };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst CellStyleBase = styled.div`\n  height: 10px;\n  width: 10px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return isActive ? \"rgb(0, 0, 0)\" : \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n  color: ${({ isActive }) => {\n    return isActive ? \"rgb(255, 255, 255)\" : \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  CellularFieldStyleBase,\n  CellStyleBase,\n} from \"./CellularAutomatonLiteStyle\";\n\nconst CellularAutomatonLite = () => {\n  const [cellsData, setCellsData] = useState([]);\n\n  const getCellPosition = (event) => {\n    const { clientY, clientX, currentTarget } = event;\n    const { top, left } = currentTarget.getBoundingClientRect();\n    const y = clientY - top;\n    const x = clientX - left;\n    const cellY = y - (y % 10);\n    const cellX = x - (x % 10);\n\n    return { cellY, cellX };\n  };\n\n  const getIsCell = (cells, cellY, cellX) => {\n    return cells.some(\n      (cell) => cell.props.top === cellY && cell.props.left === cellX\n    );\n  };\n\n  const removeCell = (cells, cellY, cellX) => {\n    return cells.filter(\n      (cell) => !(cell.props.top === cellY && cell.props.left === cellX)\n    );\n  };\n\n  const addCellData = (event) => {\n    const { cellY, cellX } = getCellPosition(event);\n\n    if (getIsCell(cellsData, cellY, cellX)) {\n      setCellsData(removeCell(cellsData, cellY, cellX));\n    } else {\n      setCellsData([\n        ...cellsData,\n\n        <CellStyleBase\n          key={`${cellY}, ${cellX}`}\n          top={cellY}\n          left={cellX}\n          isActive={true}\n        ></CellStyleBase>,\n      ]);\n    }\n  };\n\n  return (\n    <CellularFieldStyleBase onClick={addCellData}>\n      {cellsData.map((cell) => {\n        return cell;\n      })}\n    </CellularFieldStyleBase>\n  );\n};\n\nexport { CellularAutomatonLite };\n","import styled from \"@emotion/styled\";\n\nconst CellularFieldStyleBase = styled.div`\n  box-sizing: content-box;\n  height: 500px;\n  width: 500px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  display: flex;\n  flex-wrap: wrap;\n\n  position: relative;\n`;\n\nconst CellStyleBase = styled.div`\n  position: absolute;\n\n  height: 10px;\n  width: 10px;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  border-style: solid;\n  border-width: 1px;\n  border-color: rgb(0, 0, 0);\n\n  background-color: ${({ isActive }) => {\n    return (isActive && \"rgb(0, 0, 0)\") || \"rgb(255, 255, 255)\";\n  }};\n\n  font-size: 9px;\n\n  color: ${({ isActive }) => {\n    return (isActive && \"rgb(255, 255, 255)\") || \"rgb(0, 0, 0)\";\n  }};\n`;\n\nexport { CellularFieldStyleBase, CellStyleBase };\n","import { useState } from \"react\";\n\nimport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n} from \"./ComponentSelectorStyle\";\n\nconst ComponentSelector = ({\n  componentNames,\n  initialComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(initialComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <ComponentSelectorContainerStyleBase>\n      {componentNames.map((value) => {\n        return (\n          <ComponentSelectorButtonStyleBase\n            key={value}\n            htmlFor={value}\n            isactive={(componentName === value).toString()}\n          >\n            <ComponentSelectorRadioButtonStyleBase\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              checked={componentName === value}\n              onChange={chooseComponent}\n            />\n            <ComponentSelectorRadioButtonTextStyleBase>\n              {value}\n            </ComponentSelectorRadioButtonTextStyleBase>\n          </ComponentSelectorButtonStyleBase>\n        );\n      })}\n    </ComponentSelectorContainerStyleBase>\n  );\n};\n\nexport { ComponentSelector };\n","import styled from \"@emotion/styled\";\n\nconst ComponentSelectorContainerStyleBase = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 12px;\n\n  margin-bottom: 10px;\n`;\n\nconst ComponentSelectorButtonStyleBase = styled.label`\n  height: 24px;\n\n  display: flex;\n  padding-inline: 24px;\n  justify-content: center;\n  align-items: center;\n\n  border: none;\n  border-radius: 12px;\n  background-color: ${({ isactive }) => {\n    return isactive === \"true\" ? \"rgb(112, 52, 255)\" : \"rgba(138, 138, 137, 1)\";\n  }};\n\n  color: #fff;\n  font-size: 14px;\n  line-height: 20px;\n\n  font-family: \"Manrope-SemiBold\", sans-serif;\n\n  &:hover {\n    background-color: rgb(68, 11, 205);\n  }\n`;\n\nconst ComponentSelectorRadioButtonStyleBase = styled.input`\n  display: none;\n`;\n\nconst ComponentSelectorRadioButtonTextStyleBase = styled.span`\n  display: inline;\n`;\n\nexport {\n  ComponentSelectorContainerStyleBase,\n  ComponentSelectorButtonStyleBase,\n  ComponentSelectorRadioButtonStyleBase,\n  ComponentSelectorRadioButtonTextStyleBase,\n};\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({\n  onChange,\n  valueY,\n  valueX,\n  height,\n  width,\n  backgroundColor,\n}) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n      height={height}\n      width={width}\n      backgroundColor={backgroundColor}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n\n  top: ${({ top }) => {\n    return top;\n  }}px;\n\n  left: ${({ left }) => {\n    return left;\n  }}px;\n\n  height: ${({ height }) => {\n    return height;\n  }}px;\n\n  width: ${({ width }) => {\n    return width;\n  }}px;\n\n  background-color: ${({ backgroundColor }) => {\n    return backgroundColor;\n  }};\n`;\n\nexport { DraggableComponentStyle };\n","import { useState, useEffect } from \"react\";\n\nimport { setLinearGradient } from \"./setLinearGradient\";\n\nimport { GradientHoverStyleBase } from \"./GradientHoverStyle\";\n\nconst GradientHover = () => {\n  const [isGradientAnimation, setIsGradientAnimation] = useState(false);\n  const [parentNodeInformation, setParentnodeInformation] = useState({});\n  const [gradientLeft, setGradientLeft] = useState(-40);\n\n  const gradientAnimation = () => {\n    if (gradientLeft >= parentNodeInformation.offsetWidth + 40) {\n      setGradientLeft(-40);\n      setIsGradientAnimation(false);\n    } else {\n      setGradientLeft(gradientLeft + 5);\n    }\n  };\n\n  const handleMouseOver = (event) => {\n    setParentnodeInformation(event.target.parentNode);\n    setIsGradientAnimation(true);\n  };\n\n  useEffect(() => {\n    const animation = setInterval(gradientAnimation, 5);\n\n    if (!isGradientAnimation) {\n      clearInterval(animation);\n    }\n\n    return () => {\n      clearInterval(animation);\n    };\n  }, [isGradientAnimation, gradientLeft]);\n\n  return (\n    <GradientHoverStyleBase\n      onMouseOver={handleMouseOver}\n      backgroundimage={setLinearGradient(gradientLeft)}\n    ></GradientHoverStyleBase>\n  );\n};\n\nexport { GradientHover };\n","import { GradientHover } from \"./GradientHover\";\n\nimport { GradientHoverFieldStyleBase } from \"./GradientHoverFieldStyle\";\n\nconst GradientHoverField = () => {\n  return (\n    <div>\n      <GradientHoverFieldStyleBase>\n        Gradient hover\n        <GradientHover />\n      </GradientHoverFieldStyleBase>\n    </div>\n  );\n};\n\nexport { GradientHoverField };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverFieldStyleBase = styled.div`\n  height: 150px;\n  width: 800px;\n\n  background-color: black;\n  color: white;\n\n  position: relative;\n`;\n\nexport { GradientHoverFieldStyleBase };\n","import styled from \"@emotion/styled\";\n\nconst GradientHoverStyleBase = styled.div`\n  position: absolute;\n\n  top: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100%;\n\n  background: none;\n  color: white;\n  background-image: ${({ backgroundimage }) => {\n    return backgroundimage;\n  }};\n`;\n\nexport { GradientHoverStyleBase };\n","const setLinearGradient = (gradientLeft) => {\n  return `linear-gradient(\n    to right,\n  rgba(255, 255, 255, 0),\n  rgba(255, 255, 255, 0)\n    ${gradientLeft}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 1)\n    ${gradientLeft + 20}px,\n  rgba(255, 255, 255, 0)\n    ${gradientLeft + 40}px\n  );`;\n};\n\nexport { setLinearGradient };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useState } from \"react\";\n\nimport { ComponentSelector } from \"./ComponentSelector\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\nimport { GradientHoverField } from \"./GradientHover\";\nimport { CellularAutomaton } from \"./CellularAutomaton\";\nimport { CellularAutomatonLite } from \"./CellularAutomatonLite\";\nimport { AnimationTest } from \"./AnimationTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Animation test\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentSelector\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n          \"Gradient hover\",\n          \"Cellular automaton\",\n          \"Cellular automaton lite\",\n          \"Animation test\",\n        ]}\n        initialComponentName={componentName}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n      {componentName === \"Gradient hover\" && <GradientHoverField />}\n      {componentName === \"Cellular automaton\" && <CellularAutomaton />}\n      {componentName === \"Cellular automaton lite\" && <CellularAutomatonLite />}\n      {componentName === \"Animation test\" && <AnimationTest />}\n    </section>\n  );\n};\n\nexport { TestPage };\n","import { TestPage } from \"./TestPage\";\n\nexport default TestPage;\n"],"names":["handleValue","valueSetter","_ref","valueX","AnimationTest","transformRotateValue","setTransformRotateValue","useState","transformRotateYvalue","setTransformRotateYvalue","transformRotateXvalue","setTransformRotateXvalue","perspectiveValue","setPerspectiveValue","handleTransformRotateValue","handleTransformRotateYvalue","handleTransformRotateXvalue","handlePerspectiveValue","_jsxs","children","_jsx","AnimationTestController","onChange","value","color","style","height","width","borderColor","borderWidth","position","DraggableComponent","valueY","backgroundColor","Cells","cells","cellNumber","CellStyleBase","isActive","CellularAutomaton","cellsData","setCellsData","createCellsDataArray","CellularFieldStyleBase","onClick","target","map","cellData","Number","dataset","number","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_ref2","CellularAutomatonLite","event","cellY","cellX","clientY","clientX","currentTarget","top","left","getBoundingClientRect","y","x","getCellPosition","getIsCell","some","cell","props","removeCell","filter","concat","_ref3","_ref4","ComponentSelector","componentNames","initialComponentName","componentName","setComponentName","chooseComponent","newComponentName","ComponentSelectorContainerStyleBase","ComponentSelectorButtonStyleBase","htmlFor","isactive","toString","ComponentSelectorRadioButtonStyleBase","id","name","type","checked","ComponentSelectorRadioButtonTextStyleBase","nav","label","input","_templateObject3","span","_templateObject4","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","CustomRangeField","rangeValue","setRangeValue","mouseDownY","setMouseDownY","DraggableComponentStyle","DraggableComponentField","setValueY","setValueX","_ref5","GradientHover","isGradientAnimation","setIsGradientAnimation","parentNodeInformation","setParentnodeInformation","gradientLeft","setGradientLeft","gradientAnimation","offsetWidth","animation","setInterval","clearInterval","GradientHoverStyleBase","onMouseOver","parentNode","backgroundimage","setLinearGradient","GradientHoverField","GradientHoverFieldStyleBase","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","elements","pageNameInput","reset","placeholder","Navigate","to","RecursionFunctionTest","recursionFunction2","TestPage"],"sourceRoot":""}