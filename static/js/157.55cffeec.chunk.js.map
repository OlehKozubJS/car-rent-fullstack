{"version":3,"file":"static/js/157.55cffeec.chunk.js","mappings":"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","sources":["pages/test/ComponentChooser.jsx","pages/test/CustomRange/CustomRange.jsx","pages/test/CustomRange/CustomRangeField.jsx","pages/test/CustomRange/CustomRangeStyle.js","pages/test/DraggableComponent/DraggableComponent.jsx","pages/test/DraggableComponent/DraggableComponentField.jsx","pages/test/DraggableComponent/DraggableComponentStyle.js","pages/test/LogicGates/LogicGates.jsx","pages/test/NavigationTest/NavigationTest.jsx","pages/test/Recursion/RecursionFunctionTest.jsx","pages/test/TestPage.jsx","pages/test/index.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport styled from \"@emotion/styled\";\n\nconst ComponentChooser = ({\n  componentNames,\n  currentComponentName,\n  onChange,\n}) => {\n  const [componentName, setComponentName] = useState(currentComponentName);\n\n  const chooseComponent = (event) => {\n    const newComponentName = event.target.value;\n    setComponentName(newComponentName);\n    onChange(newComponentName);\n  };\n\n  return (\n    <nav>\n      {componentNames.map((value) => {\n        return (\n          <label key={value} htmlFor={value}>\n            <input\n              id={value}\n              name=\"chooseComponentRadio\"\n              type=\"radio\"\n              value={value}\n              onChange={chooseComponent}\n              checked={componentName === value}\n            />\n            <span>{value}</span>\n          </label>\n        );\n      })}\n    </nav>\n  );\n};\n\nexport { ComponentChooser };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { RangeField, RangeDial } from \"./CustomRangeStyle\";\n\nconst CustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = ({ clientX }) => {\n    setIsDraggable(true);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientX }) => {\n    if (isDraggable) {\n      const newRangeValue = value + clientX - mouseDownX;\n\n      if (newRangeValue >= 0 && newRangeValue <= 450) {\n        onChange(newRangeValue);\n      }\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={value}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { CustomRange };\n","import { useState } from \"react\";\n\nimport { CustomRange } from \"./CustomRange\";\n\nconst CustomRangeField = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <CustomRange onChange={handleRangeValue} value={rangeValue} />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport { CustomRangeField };\n","import styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { RangeField, RangeDial };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../../hooks\";\n\nimport { DraggableComponentStyle } from \"./DraggableComponentStyle\";\n\nconst DraggableComponent = ({ valueY, valueX, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [mouseDownY, setMouseDownY] = useState(valueY);\n  const [mouseDownX, setMouseDownX] = useState(valueX);\n\n  const handleMouseDown = ({ clientY, clientX }) => {\n    setIsDraggable(true);\n    setMouseDownY(clientY);\n    setMouseDownX(clientX);\n  };\n\n  const handleMouseMove = ({ clientY, clientX }) => {\n    if (isDraggable) {\n      onChange({\n        valueY: valueY + clientY - mouseDownY,\n        valueX: valueX + clientX - mouseDownX,\n      });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousedown\", handleMouseDown), [isDraggable]);\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  return (\n    <DraggableComponentStyle\n      onMouseDown={handleMouseDown}\n      top={valueY}\n      left={valueX}\n    ></DraggableComponentStyle>\n  );\n};\n\nexport { DraggableComponent };\n","import { useEffect, useState } from \"react\";\n\nimport { DraggableComponent } from \"./DraggableComponent\";\n\nconst DraggableComponentField = () => {\n  const [valueY, setValueY] = useState(200);\n  const [valueX, setValueX] = useState(0);\n\n  const handleXYvalue = ({ valueY, valueX }) => {\n    if (valueY >= 200) {\n      setValueY(valueY);\n    }\n    if (valueX >= 0) {\n      setValueX(valueX);\n    }\n  };\n\n  return (\n    <section>\n      <DraggableComponent\n        valueY={valueY}\n        valueX={valueX}\n        onChange={handleXYvalue}\n      />\n      <p>valueY={valueY}</p>\n      <p>valueX={valueX}</p>\n    </section>\n  );\n};\n\nexport { DraggableComponentField };\n","import styled from \"@emotion/styled\";\n\nconst DraggableComponentStyle = styled.div`\n  position: absolute;\n  top: ${({ top }) => {\n    return top;\n  }}px;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nexport { DraggableComponentStyle };\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [inputD, setInputD] = useState(0);\n  const [inputE, setInputE] = useState(0);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n  const handleValueD = () => {\n    const newValueD = inputD + 1;\n    if (newValueD === 2) {\n      setInputD(-1);\n    } else {\n      setInputD(newValueD);\n    }\n  };\n  const handleValueE = () => {\n    const newValueE = inputE + 1;\n    if (newValueE === 2) {\n      setInputE(-1);\n    } else {\n      setInputE(newValueE);\n    }\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  const nand = (a, b) => {\n    return !(a && b);\n  };\n\n  const ternarAND = (a, b) => {\n    if (a <= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n  const ternarOR = (a, b) => {\n    if (a >= b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n          A: {(inputA && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n          B: {(inputB && \"true\") || \"false\"}\n        </button>\n        <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n          C: {(inputC && \"true\") || \"false\"}\n        </button>\n        <p>{(output && \"true\") || \"false\"}</p>\n      </div>\n      <div>\n        <button type=\"button\" onClick={handleValueD}>\n          D: {inputD}\n        </button>\n        <button type=\"button\" onClick={handleValueE}>\n          E: {inputE}\n        </button>\n        <p>{ternarAND(inputD, inputE)}</p>\n        <p>{ternarOR(inputD, inputE)}</p>\n      </div>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useState } from \"react\";\n\nimport { Navigate } from \"react-router-dom\";\n\nconst NavigationTest = () => {\n  const [pagePath, setPagePath] = useState(\"test\");\n\n  const handlePagePath = (event) => {\n    event.preventDefault();\n    setPagePath(event.currentTarget.elements.pageNameInput.value);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <section>\n      <form onSubmit={handlePagePath}>\n        <input name=\"pageNameInput\" type=\"text\" placeholder=\"Enter page name\" />\n        <button type=\"submit\">Enter</button>\n      </form>\n      <Navigate to={`/${pagePath}`} />\n    </section>\n  );\n};\n\nexport { NavigationTest };\n","const RecursionFunctionTest = () => {\n  const recursionFunction = (number) => {\n    if (number <= 0) {\n      return number;\n    } else {\n      return 2 * number - 1 + recursionFunction(number - 1);\n    }\n  };\n\n  const recursionFunction2 = (number) => {\n    if (number === 0) {\n      return 0;\n    } else {\n      return 3 * number * (number - 1) + 1 + recursionFunction2(number - 1);\n    }\n  };\n\n  return (\n    <div>\n      <p>Square of 0: {recursionFunction2(0)}</p>\n      <p>Square of 1: {recursionFunction2(1)}</p>\n      <p>Square of 2: {recursionFunction2(2)}</p>\n      <p>Square of 3: {recursionFunction2(3)}</p>\n      <p>Square of 4: {recursionFunction2(4)}</p>\n      <p>Square of 5: {recursionFunction2(5)}</p>\n      <p>Square of 6: {recursionFunction2(6)}</p>\n      <p>Square of 7: {recursionFunction2(7)}</p>\n      <p>Square of 8: {recursionFunction2(8)}</p>\n      <p>Square of 9: {recursionFunction2(9)}</p>\n      <p>Square of 10: {recursionFunction2(10)}</p>\n    </div>\n  );\n};\n\nexport { RecursionFunctionTest };\n/*\n\n(x + 1)^3 = (x^2 + 2x + 1)*(x + 1) = x^3 + 2x^2 + x + x^2 + 2x + 1 = x^3 + 3x^2 + 3x + 1;\n\n3(x - 1)^2 + 3(x - 1) + 1 = 3x^2 - 6x + 3 + 3x - 3 + 1 = 3x^2 - 3x + 1 = 3x(x - 1) + 1;\n\n3^3 = 27 = (3*1*0 + 1) + (3*2*1 + 1) + (3*3*2 + 1) = 1 + 7 + 19\n\n*/\n","import { useEffect, useState } from \"react\";\n\nimport { ComponentChooser } from \"./ComponentChooser\";\n\nimport { LogicGates } from \"./LogicGates\";\nimport { CustomRangeField } from \"./CustomRange\";\nimport { DraggableComponentField } from \"./DraggableComponent\";\nimport { RecursionFunctionTest } from \"./Recursion\";\nimport { NavigationTest } from \"./NavigationTest\";\n\nconst TestPage = () => {\n  const [componentName, setComponentName] = useState(\"Logic gates\");\n\n  const chooseComponent = (newComponentName) => {\n    setComponentName(newComponentName);\n  };\n\n  return (\n    <section>\n      <ComponentChooser\n        componentNames={[\n          \"Logic gates\",\n          \"Simplest custom range\",\n          \"Draggable component\",\n          \"Navigation test\",\n          \"Recursion\",\n        ]}\n        currentComponentName={\"Logic gates\"}\n        onChange={chooseComponent}\n      />\n      {componentName === \"Logic gates\" && <LogicGates />}\n      {componentName === \"Simplest custom range\" && <CustomRangeField />}\n      {componentName === \"Draggable component\" && <DraggableComponentField />}\n      {componentName === \"Navigation test\" && <NavigationTest />}\n      {componentName === \"Recursion\" && <RecursionFunctionTest />}\n    </section>\n  );\n};\n\nexport { TestPage };\n","import { TestPage } from \"./TestPage\";\n\nexport default TestPage;\n"],"names":["ComponentChooser","_ref","componentNames","currentComponentName","onChange","componentName","setComponentName","useState","chooseComponent","event","newComponentName","target","value","_jsx","children","map","_jsxs","htmlFor","id","name","type","checked","CustomRange","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","useEffect","handleEventListener","_ref3","clientX","newRangeValue","handleMouseUp","RangeField","RangeDial","onMouseDown","_ref2","left","CustomRangeField","rangeValue","setRangeValue","styled","div","_templateObject","_taggedTemplateLiteral","_templateObject2","DraggableComponent","valueY","valueX","mouseDownY","setMouseDownY","handleMouseDown","clientY","DraggableComponentStyle","top","DraggableComponentField","setValueY","setValueX","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","inputD","setInputD","inputE","setInputE","output","setOutput","nor","a","b","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","handleValueD","newValueD","handleValueE","newValueE","ternarOR","ternarAND","NavigationTest","pagePath","setPagePath","onSubmit","preventDefault","currentTarget","elements","pageNameInput","reset","placeholder","Navigate","to","concat","RecursionFunctionTest","recursionFunction2","number","TestPage"],"sourceRoot":""}