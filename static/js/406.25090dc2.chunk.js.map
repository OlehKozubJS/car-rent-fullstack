{"version":3,"file":"static/js/406.25090dc2.chunk.js","mappings":"ovBAcA,MAwKA,EAxKoBA,KAClB,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE1BC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,CAAC,EAAG,KAElDG,EAAmBC,IAAwBJ,EAAAA,EAAAA,UAAS,CAAC,KAErDK,EAAMC,IAAWN,EAAAA,EAAAA,UAAS,IAAIO,OAkDrCC,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,iBAhDoBC,KAC5BJ,EAAQ,IAAIC,KAAO,GA+C2B,KAAO,KAEvDC,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,iBA9CuBE,KAC/BZ,EAAQD,EAAO,EAAE,GA6CgC,KAAM,CAACA,KAE1DU,EAAAA,EAAAA,YAAUI,EAAAA,EAAAA,gBA5CoBC,KACxBZ,EAAea,OAAS,IAC1BZ,EAAkB,IACbD,EACHA,EAAeA,EAAea,OAAS,GACrCb,EAAeA,EAAea,OAAS,IAE7C,GAqC6C,KAAO,CAACb,KAEvDO,EAAAA,EAAAA,YAAUC,EAAAA,EAAAA,iBApCmBM,KAC3B,IAAIC,EAAkBb,EAAkBA,EAAkBW,OAAS,GAEnE,GAAIE,GAAmB,IACrB,OAGF,IAAIC,EAAiBD,EAErB,OAAa,CACXC,GAAkB,EAQlB,GANqBd,EAAkBe,OACpCC,GACCF,EAAiBE,IACjBC,KAAKC,MAAMJ,EAAiBE,KAI9B,KAEJ,CAEAf,EAAqB,IAAID,EAAmBc,GAAgB,GAaf,KAAO,CAACd,IAEvD,MAAOmB,EAASC,IAAcvB,EAAAA,EAAAA,UAAS,KAQvCQ,EAAAA,EAAAA,YANkBgB,KACZF,EAAQR,OAAS,IACnBS,EAAW,IAAID,EAASF,KAAKK,IAAIH,EAAQR,OAAQ,IACnD,GAGmB,CAACQ,IAEtB,IAAII,EAAO,GACPC,EAAiB,EACjBC,EAAiB,EACjBC,EAAa,EACbC,EAAa,EAEjB,MAAMC,EAAWC,GACRA,EAAMC,OAAOC,MA6BtB,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAPcJ,IACpBA,EAAMK,gBAAgB,EAMOC,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,eAAcF,UAC3BC,EAAAA,EAAAA,KAAA,SACEE,GAAG,eACHC,KAAK,OACLC,YAAY,kCACZC,SAnCUZ,IAClBN,EAAOK,EAAQC,EAAM,EAmCba,MAAO,CAAEC,MAAO,iBAItBX,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,yBAAwBF,UACrCC,EAAAA,EAAAA,KAAA,SACEE,GAAG,yBACHC,KAAK,SACLC,YAAY,OACZC,SA3CwBZ,IAChCL,EAAiBI,EAAQC,EAAM,OA6C3BO,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,yBAAwBF,UACrCC,EAAAA,EAAAA,KAAA,SACEE,GAAG,yBACHC,KAAK,SACLC,YAAY,KACZC,SA/CwBZ,IAChCJ,EAAiBG,EAAQC,EAAM,UAkD7BG,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,qBAAoBF,UACjCC,EAAAA,EAAAA,KAAA,SACEE,GAAG,qBACHC,KAAK,SACLC,YAAY,OACZC,SAtDoBZ,IAC5BH,EAAaE,EAAQC,EAAM,OAwDvBO,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,qBAAoBF,UACjCC,EAAAA,EAAAA,KAAA,SACEE,GAAG,qBACHC,KAAK,SACLC,YAAY,KACZC,SA1DoBZ,IAC5BF,EAAaC,EAAQC,EAAM,UA6DzBO,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,eACjB,C","sources":["pages/TestPages/testComponents/CarFilterTest.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nimport {\n  cars,\n  handleEventListener,\n  handleInterval,\n  handleTimeOut,\n  CarFilter,\n  CarGallery,\n  CarModal,\n  vanillaReducer,\n  SVGimage,\n} from \"./imports\";\n\nconst TestPageOne = () => {\n  const [time, setTime] = useState(0);\n\n  const [fibonacciArray, setFibonacciArray] = useState([0, 1]);\n\n  const [primeNumbersArray, setPrimeNumbersArray] = useState([2]);\n\n  const [date, setDate] = useState(new Date());\n\n  const dateAnimationFunction = () => {\n    setDate(new Date());\n  };\n\n  const timeAnimationFunctionOne = () => {\n    setTime(time + 1);\n  };\n\n  const fibonacciTimeFunction = () => {\n    if (fibonacciArray.length < 16) {\n      setFibonacciArray([\n        ...fibonacciArray,\n        fibonacciArray[fibonacciArray.length - 1] +\n          fibonacciArray[fibonacciArray.length - 2],\n      ]);\n    }\n  };\n\n  const primeNumbersFunction = () => {\n    let lastPrimeNumber = primeNumbersArray[primeNumbersArray.length - 1];\n\n    if (lastPrimeNumber >= 100) {\n      return;\n    }\n\n    let newPrimeNumber = lastPrimeNumber;\n\n    while (true) {\n      newPrimeNumber += 1;\n\n      const isNoDivisors = primeNumbersArray.every(\n        (primeNumber) =>\n          newPrimeNumber / primeNumber !==\n          Math.floor(newPrimeNumber / primeNumber)\n      );\n\n      if (isNoDivisors) {\n        break;\n      }\n    }\n\n    setPrimeNumbersArray([...primeNumbersArray, newPrimeNumber]);\n  };\n\n  const varNameToString = (objectName) => {\n    return Object.keys(objectName)[0];\n  };\n\n  useEffect(handleInterval(dateAnimationFunction, 1000), []);\n\n  useEffect(handleInterval(timeAnimationFunctionOne, 500), [time]);\n\n  useEffect(handleTimeOut(fibonacciTimeFunction, 1000), [fibonacciArray]);\n\n  useEffect(handleInterval(primeNumbersFunction, 1000), [primeNumbersArray]);\n\n  const [squares, setSquares] = useState([]);\n\n  const getSquare = () => {\n    if (squares.length < 10) {\n      setSquares([...squares, Math.pow(squares.length, 2)]);\n    }\n  };\n\n  useEffect(getSquare, [squares]);\n\n  let make = \"\";\n  let minRentalPrice = 0;\n  let maxRentalPrice = 0;\n  let minMileage = 0;\n  let maxMileage = 0;\n\n  const handler = (event) => {\n    return event.target.value;\n  };\n\n  const handleMake = (event) => {\n    make = handler(event);\n  };\n\n  const handleMinimalRentalPrice = (event) => {\n    minRentalPrice = handler(event);\n  };\n\n  const handleMaximalRentalPrice = (event) => {\n    maxRentalPrice = handler(event);\n  };\n\n  const handleMinimalMileage = (event) => {\n    minMileage = handler(event);\n  };\n\n  const handleMaximalMileage = (event) => {\n    maxMileage = handler(event);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    //onSubmit({ make, minRentalPrice, maxRentalPrice, minMileage, maxMileage });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <h3>Car brand (make)</h3>\n        <label htmlFor=\"carMakeInput\">\n          <input\n            id=\"carMakeInput\"\n            type=\"text\"\n            placeholder=\"Enter car make name or its part\"\n            onChange={handleMake}\n            style={{ width: \"200px\" }}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car rental price</h3>\n        <label htmlFor=\"minCarRentalPriceInput\">\n          <input\n            id=\"minCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalRentalPrice}\n          />\n        </label>\n        <label htmlFor=\"maxCarRentalPriceInput\">\n          <input\n            id=\"maxCarRentalPriceInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalRentalPrice}\n          />\n        </label>\n      </div>\n      <div>\n        <h3>Car mileage</h3>\n        <label htmlFor=\"minCarMileageInput\">\n          <input\n            id=\"minCarMileageInput\"\n            type=\"number\"\n            placeholder=\"From\"\n            onChange={handleMinimalMileage}\n          />\n        </label>\n        <label htmlFor=\"maxCarMileageInput\">\n          <input\n            id=\"maxCarMileageInput\"\n            type=\"number\"\n            placeholder=\"To\"\n            onChange={handleMaximalMileage}\n          />\n        </label>\n      </div>\n      <button type=\"submit\">Find car</button>\n    </form>\n  );\n};\n\nexport default TestPageOne;\n"],"names":["TestPageOne","time","setTime","useState","fibonacciArray","setFibonacciArray","primeNumbersArray","setPrimeNumbersArray","date","setDate","Date","useEffect","handleInterval","dateAnimationFunction","timeAnimationFunctionOne","handleTimeOut","fibonacciTimeFunction","length","primeNumbersFunction","lastPrimeNumber","newPrimeNumber","every","primeNumber","Math","floor","squares","setSquares","getSquare","pow","make","minRentalPrice","maxRentalPrice","minMileage","maxMileage","handler","event","target","value","_jsxs","onSubmit","preventDefault","children","_jsx","htmlFor","id","type","placeholder","onChange","style","width"],"sourceRoot":""}