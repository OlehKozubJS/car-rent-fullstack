{"version":3,"file":"static/js/411.9fe711d7.chunk.js","mappings":"+LAIA,MAgBA,EAhBiBA,KACf,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,GAM7C,OACEC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,oBAAmB,CAACC,SANCC,IACxBP,EAAcO,EAAc,EAKuBC,MAAOT,KACxDK,EAAAA,EAAAA,KAACK,EAAAA,WAAU,KACXL,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,MACI,C,uECdd,MAAMU,EAAaA,KACjB,MAAOC,EAAQC,IAAaV,EAAAA,EAAAA,WAAS,IAC9BW,EAAQC,IAAaZ,EAAAA,EAAAA,WAAS,IAC9Ba,EAAQC,IAAad,EAAAA,EAAAA,WAAS,IAC9Be,EAAQC,IAAahB,EAAAA,EAAAA,WAAS,GAqB/BiB,EAAMA,CAACC,EAAGC,MACLD,GAAKC,GAahB,OAVAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWJ,EAAIR,EAAQE,GACvBW,EAAUL,EAAIR,EAAQY,GACtBE,EAAUN,EAAII,EAAUV,GACxBa,EAAaP,EAAIK,EAASC,GAC1BE,EAAYR,EAAIO,EAAYA,GAElCR,EAAUS,EAAU,GACnB,CAAChB,EAAQE,EAAQE,KAGlBZ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,qBAEHD,EAAAA,EAAAA,MAAA,UAAQyB,KAAK,SAASC,QAAUlB,GAjCfmB,MACnBlB,GAAU,EAAM,IAJEmB,MAClBnB,GAAU,EAAK,GAmC0DR,SAAA,CAAC,MACjEO,EAAU,OAAW,YAE5BR,EAAAA,EAAAA,MAAA,UAAQyB,KAAK,SAASC,QAAUhB,GA9BfmB,MACnBlB,GAAU,EAAM,IAJEmB,MAClBnB,GAAU,EAAK,GAgC0DV,SAAA,CAAC,MACjES,EAAU,OAAW,YAE5BV,EAAAA,EAAAA,MAAA,UAAQyB,KAAK,SAASC,QAAUd,GA3BfmB,MACnBlB,GAAU,EAAM,IAJEmB,MAClBnB,GAAU,EAAK,GA6B0DZ,SAAA,CAAC,MACjEW,EAAU,OAAW,YAE5BV,EAAAA,EAAAA,KAAA,KAAAD,SAAKa,EAAU,OAAW,YACtB,C,+GChDV,MAAMmB,EAAaC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQvBC,EAAYJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sIAGlBG,IAAe,IAAd,KAAEC,GAAMD,EACf,OAAOC,CAAI,IAOTtC,EAAsBuC,IAA0B,IAAzB,MAAEpC,EAAK,SAAEF,GAAUsC,EAC9C,MAAOC,EAAaC,IAAkB7C,EAAAA,EAAAA,WAAS,IACxCF,EAAYC,IAAiBC,EAAAA,EAAAA,UAASO,IACtCuC,EAAYC,IAAiB/C,EAAAA,EAAAA,UAAS,GAmC7C,OARAoB,EAAAA,EAAAA,YAAU4B,EAAAA,EAAAA,IAAoB,aApBLC,IAGvB,GAFAA,EAAMC,kBAEDN,EACH,OAGF,MAAMO,EAAaF,EAAMG,QAEnB9C,EAAgBR,EAAaqD,EAAaL,EAE5CxC,GAAiB,GAAKA,GAAiB,KACzCP,EAAcO,EAChB,IAO2D,CAACsC,KAE9DxB,EAAAA,EAAAA,YAAU4B,EAAAA,EAAAA,IAAoB,WANRK,KACpBR,GAAe,EAAM,IAKkC,CAACD,KAE1DxB,EAAAA,EAAAA,YAAU,KACRf,EAASP,EAAW,GACnB,CAACA,KAGFK,EAAAA,EAAAA,KAAC+B,EAAU,CAAAhC,UACTC,EAAAA,EAAAA,KAACoC,EAAS,CAACe,YAnCUL,IACvBJ,GAAe,GACfE,EAAcE,EAAMG,QAAQ,EAiCeV,KAAM5C,KACpC,C","sources":["pages/TestPage.jsx","pages/test/LogicGates.jsx","pages/test/SimplestCustomRange.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport { LogicGates, SimplestCustomRange } from \"./test\";\n\nconst TestPage = () => {\n  const [rangeValue, setRangeValue] = useState(0);\n\n  const handleRangeValue = (newRangeValue) => {\n    setRangeValue(newRangeValue);\n  };\n\n  return (\n    <section>\n      <SimplestCustomRange onChange={handleRangeValue} value={rangeValue} />\n      <LogicGates />\n      <p>{rangeValue}</p>\n    </section>\n  );\n};\n\nexport default TestPage;\n","import { useEffect, useState } from \"react\";\n\nconst LogicGates = () => {\n  const [inputA, setInputA] = useState(false);\n  const [inputB, setInputB] = useState(false);\n  const [inputC, setInputC] = useState(false);\n  const [output, setOutput] = useState(false);\n\n  const handleTrueA = () => {\n    setInputA(true);\n  };\n  const handleFalseA = () => {\n    setInputA(false);\n  };\n  const handleTrueB = () => {\n    setInputB(true);\n  };\n  const handleFalseB = () => {\n    setInputB(false);\n  };\n  const handleTrueC = () => {\n    setInputC(true);\n  };\n  const handleFalseC = () => {\n    setInputC(false);\n  };\n\n  const nor = (a, b) => {\n    return !(a || b);\n  };\n\n  useEffect(() => {\n    const valOneAB = nor(inputA, inputB);\n    const valTwoA = nor(inputA, valOneAB);\n    const valTwoB = nor(valOneAB, inputB);\n    const valThreeAB = nor(valTwoA, valTwoB);\n    const valFourAB = nor(valThreeAB, valThreeAB);\n\n    setOutput(valFourAB);\n  }, [inputA, inputB, inputC]);\n\n  return (\n    <div>\n      This is test page\n      <button type=\"button\" onClick={(inputA && handleFalseA) || handleTrueA}>\n        A: {(inputA && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputB && handleFalseB) || handleTrueB}>\n        B: {(inputB && \"true\") || \"false\"}\n      </button>\n      <button type=\"button\" onClick={(inputC && handleFalseC) || handleTrueC}>\n        C: {(inputC && \"true\") || \"false\"}\n      </button>\n      <p>{(output && \"true\") || \"false\"}</p>\n    </div>\n  );\n};\n\nexport { LogicGates };\n","import { useEffect, useState } from \"react\";\n\nimport { handleEventListener } from \"../../hooks\";\n\nimport styled from \"@emotion/styled\";\n\nconst RangeField = styled.div`\n  width: 500px;\n  height: 50px;\n  background-color: rgb(200, 200, 250);\n\n  position: relative;\n`;\n\nconst RangeDial = styled.div`\n  position: absolute;\n  top: 0;\n  left: ${({ left }) => {\n    return left;\n  }}px;\n  width: 50px;\n  height: 50px;\n  background-color: rgb(100, 100, 250);\n`;\n\nconst SimplestCustomRange = ({ value, onChange }) => {\n  const [isDraggable, setIsDraggable] = useState(false);\n  const [rangeValue, setRangeValue] = useState(value);\n  const [mouseDownX, setMouseDownX] = useState(0);\n\n  const handleMouseDown = (event) => {\n    setIsDraggable(true);\n    setMouseDownX(event.clientX);\n  };\n\n  const handleMouseMove = (event) => {\n    event.preventDefault();\n\n    if (!isDraggable) {\n      return;\n    }\n\n    const mouseMoveX = event.clientX;\n\n    const newRangeValue = rangeValue + mouseMoveX - mouseDownX;\n\n    if (newRangeValue >= 0 && newRangeValue <= 450) {\n      setRangeValue(newRangeValue);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDraggable(false);\n  };\n\n  useEffect(handleEventListener(\"mousemove\", handleMouseMove), [isDraggable]);\n\n  useEffect(handleEventListener(\"mouseup\", handleMouseUp), [isDraggable]);\n\n  useEffect(() => {\n    onChange(rangeValue);\n  }, [rangeValue]);\n\n  return (\n    <RangeField>\n      <RangeDial onMouseDown={handleMouseDown} left={rangeValue}></RangeDial>\n    </RangeField>\n  );\n};\n\nexport { SimplestCustomRange };\n"],"names":["TestPage","rangeValue","setRangeValue","useState","_jsxs","children","_jsx","SimplestCustomRange","onChange","newRangeValue","value","LogicGates","inputA","setInputA","inputB","setInputB","inputC","setInputC","output","setOutput","nor","a","b","useEffect","valOneAB","valTwoA","valTwoB","valThreeAB","valFourAB","type","onClick","handleFalseA","handleTrueA","handleFalseB","handleTrueB","handleFalseC","handleTrueC","RangeField","styled","div","_templateObject","_taggedTemplateLiteral","RangeDial","_templateObject2","_ref","left","_ref2","isDraggable","setIsDraggable","mouseDownX","setMouseDownX","handleEventListener","event","preventDefault","mouseMoveX","clientX","handleMouseUp","onMouseDown"],"sourceRoot":""}